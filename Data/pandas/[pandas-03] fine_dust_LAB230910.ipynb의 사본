{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1EJWPDryqoBL2zd46ED_nmc9ihCNsSCF0","timestamp":1694353621753},{"file_id":"1xL0Zga8CsuSw_6ZZ8Yy3fbvlJT3FXvHd","timestamp":1634454406170}],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"EjBWtm_nmNHu"},"source":["## 1.파일 다운로드"]},{"cell_type":"code","metadata":{"id":"qfHamjZ_l7vt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697962052800,"user_tz":-540,"elapsed":771,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"8a2151cd-0b95-41ac-ea0a-c9c7e22f682d"},"source":["!git clone https://github.com/Soyoung-Yoon/data_01"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'data_01'...\n","remote: Enumerating objects: 53, done.\u001b[K\n","remote: Counting objects: 100% (53/53), done.\u001b[K\n","remote: Compressing objects: 100% (34/34), done.\u001b[K\n","remote: Total 53 (delta 19), reused 53 (delta 19), pack-reused 0\u001b[K\n","Receiving objects: 100% (53/53), 5.48 MiB | 18.88 MiB/s, done.\n","Resolving deltas: 100% (19/19), done.\n"]}]},{"cell_type":"code","source":["###########폰트 라이브러리 불러오기#############\n","import matplotlib.font_manager as fm\n","import matplotlib.pyplot as plt\n","import matplotlib as mpl\n","\n","# !apt-get -qq install fonts-nanum\n","!sudo apt-get install -y fonts-nanum\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf\n","# 설치된 나눔글꼴중 원하는 녀석의 전체 경로를 가져오자\n","fe = fm.FontEntry(fname=r'/usr/share/fonts/truetype/nanum/NanumGothic.ttf',name='NanumGothic')\n","fm.fontManager.ttflist.insert(0,fe)\n","plt.rcParams.update({'font.size':13,'font.family':'NanumGothic'})\n","print('설치가 되었습니다.')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zCUhmPlcbPGS","executionInfo":{"status":"ok","timestamp":1697962080507,"user_tz":-540,"elapsed":16566,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"99df060c-7f70-4b1a-fd6f-ad7af60b624d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","The following NEW packages will be installed:\n","  fonts-nanum\n","0 upgraded, 1 newly installed, 0 to remove and 18 not upgraded.\n","Need to get 10.3 MB of archives.\n","After this operation, 34.1 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu jammy/universe amd64 fonts-nanum all 20200506-1 [10.3 MB]\n","Fetched 10.3 MB in 3s (3,369 kB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 78, <> line 1.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package fonts-nanum.\n","(Reading database ... 120874 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20200506-1_all.deb ...\n","Unpacking fonts-nanum (20200506-1) ...\n","Setting up fonts-nanum (20200506-1) ...\n","Processing triggers for fontconfig (2.13.1-4.2ubuntu5) ...\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 12 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/usr/share/fonts/truetype: skipping, looped directory detected\n","/usr/share/fonts/truetype/humor-sans: skipping, looped directory detected\n","/usr/share/fonts/truetype/liberation: skipping, looped directory detected\n","/usr/share/fonts/truetype/nanum: skipping, looped directory detected\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n","설치가 되었습니다.\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"4Jc7VH9UW6BK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697962102057,"user_tz":-540,"elapsed":19438,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"5a320609-e7ed-4037-a43f-e00a1b9b622e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","metadata":{"id":"zfb0qkWpO7IV"},"source":["## 2.Colab에서 한글 폰트 사용하기"]},{"cell_type":"code","metadata":{"id":"Ju01GX7OVddk"},"source":["### [230417]변경안내\n","# colab에서 matplotlib의 버전이 변경되면서\n","# koreanize_matplotlib 사용이 가능해 졌습니다.\n","# 아래의 설치 후, import koreanize_matplotlib 를 한 뒤 사용하시면 됩니다."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8PslbHCwWqCM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697962132403,"user_tz":-540,"elapsed":10585,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"28fc1f0b-b0db-4983-ded5-c0829654c505"},"source":["!pip install koreanize-matplotlib"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting koreanize-matplotlib\n","  Downloading koreanize_matplotlib-0.1.1-py3-none-any.whl (7.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.9/7.9 MB\u001b[0m \u001b[31m24.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from koreanize-matplotlib) (3.7.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (1.1.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (4.43.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (1.4.5)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (1.23.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (23.2)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (3.1.1)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->koreanize-matplotlib) (1.16.0)\n","Installing collected packages: koreanize-matplotlib\n","Successfully installed koreanize-matplotlib-0.1.1\n"]}]},{"cell_type":"code","metadata":{"id":"8jXofBbYWogX","colab":{"base_uri":"https://localhost:8080/","height":315},"executionInfo":{"status":"ok","timestamp":1697962132892,"user_tz":-540,"elapsed":495,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"e4ffe38e-a4b2-4f93-82f9-7e35838d57d1"},"source":["# 사용 예시!\n","import matplotlib.pyplot as plt\n","import koreanize_matplotlib\n","plt.figure(figsize=(4,3))\n","plt.plot([-1, 0, 1, 2])\n","plt.xlabel('간단한 그래프')\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 400x300 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"naUXmBprpDM7"},"source":["## 3.미세먼지"]},{"cell_type":"code","metadata":{"id":"EgnXWwn-pZTr"},"source":["# [3-0] 사용라이브러리 import\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IDFjuMZIpIvM"},"source":["### 3-1.파일 준비하기\n","- data_day_2016.xlsx, data_day_2017.xlsx, data_day_2018.xlsx, data_day_2019.xlsx 파일을 가져와 df로 합치기작업\n","- 각 파일에 기록되어 있는 내용\n","    - 측정일시, 측정소명, 이산화질소농도, 오존농도, 이산화탄소농도, 아황산가스, 미세먼지, 초미세먼지의 측정치"]},{"cell_type":"code","metadata":{"id":"ngjXhJDupF90","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1696149986126,"user_tz":-540,"elapsed":2421,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"e3ba9408-de48-4b9f-b8d5-e19bd207b567"},"source":["# [3-1] './data_01/data_day_2016.xlsx' 파일을 가져와 df2016이라는 이름을 부여합니다.\n","df2016=pd.read_excel('./data_01/data_day_2016.xlsx',engine='openpyxl')\n","df2016.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       측정일시  측정소명  이산화질소농도(ppm)  오존농도(ppm)  이산화탄소농도(ppm)  아황산가스(ppm)  \\\n","0  20160101   강남구         0.047      0.006           0.8       0.006   \n","1  20160101  강남대로         0.054      0.004           1.2       0.009   \n","2  20160101   강동구         0.043      0.002           0.9       0.004   \n","3  20160101  강변북로         0.046      0.004           1.1       0.006   \n","4  20160101   강북구         0.047      0.004           1.1       0.004   \n","\n","   미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)  \n","0       73.0        44.0  \n","1       85.0        52.0  \n","2       77.0        45.0  \n","3       73.0        39.0  \n","4       77.0        52.0  "],"text/html":["\n","  <div id=\"df-e4ac4522-a841-4b91-aaf9-3e4a47146cb9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>이산화질소농도(ppm)</th>\n","      <th>오존농도(ppm)</th>\n","      <th>이산화탄소농도(ppm)</th>\n","      <th>아황산가스(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20160101</td>\n","      <td>강남구</td>\n","      <td>0.047</td>\n","      <td>0.006</td>\n","      <td>0.8</td>\n","      <td>0.006</td>\n","      <td>73.0</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20160101</td>\n","      <td>강남대로</td>\n","      <td>0.054</td>\n","      <td>0.004</td>\n","      <td>1.2</td>\n","      <td>0.009</td>\n","      <td>85.0</td>\n","      <td>52.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20160101</td>\n","      <td>강동구</td>\n","      <td>0.043</td>\n","      <td>0.002</td>\n","      <td>0.9</td>\n","      <td>0.004</td>\n","      <td>77.0</td>\n","      <td>45.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20160101</td>\n","      <td>강변북로</td>\n","      <td>0.046</td>\n","      <td>0.004</td>\n","      <td>1.1</td>\n","      <td>0.006</td>\n","      <td>73.0</td>\n","      <td>39.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20160101</td>\n","      <td>강북구</td>\n","      <td>0.047</td>\n","      <td>0.004</td>\n","      <td>1.1</td>\n","      <td>0.004</td>\n","      <td>77.0</td>\n","      <td>52.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4ac4522-a841-4b91-aaf9-3e4a47146cb9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4ac4522-a841-4b91-aaf9-3e4a47146cb9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4ac4522-a841-4b91-aaf9-3e4a47146cb9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d0fff093-121f-4492-993f-9dc2bf1aeb02\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d0fff093-121f-4492-993f-9dc2bf1aeb02')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d0fff093-121f-4492-993f-9dc2bf1aeb02 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"sESr2k6-nGdk","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1696149992443,"user_tz":-540,"elapsed":3181,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"b8d0409b-ad71-4a32-e52f-35b2f24a378f"},"source":["# [3-2] './data_01/data_day_2017.xlsx' 파일을 가져와 df2017이라는 이름을 부여합니다.\n","df2017=pd.read_excel('./data_01/data_day_2017.xlsx',engine='openpyxl')\n","df2017.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       측정일시  측정소명  이산화질소농도(ppm)  오존농도(ppm)  이산화탄소농도(ppm)  아황산가스(ppm)  \\\n","0  20170101   강남구         0.040      0.002           0.8       0.005   \n","1  20170101  강남대로         0.082      0.005           1.4       0.007   \n","2  20170101   강동구         0.039      0.003           0.8       0.004   \n","3  20170101  강변북로         0.042      0.003           0.8       0.004   \n","4  20170101   강북구         0.046      0.003           1.0       0.005   \n","\n","   미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)  \n","0       80.0        58.0  \n","1       83.0        58.0  \n","2       80.0        54.0  \n","3       81.0         NaN  \n","4       78.0        65.0  "],"text/html":["\n","  <div id=\"df-cf604a46-81a5-44a5-9151-80e8fdfb4047\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>이산화질소농도(ppm)</th>\n","      <th>오존농도(ppm)</th>\n","      <th>이산화탄소농도(ppm)</th>\n","      <th>아황산가스(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20170101</td>\n","      <td>강남구</td>\n","      <td>0.040</td>\n","      <td>0.002</td>\n","      <td>0.8</td>\n","      <td>0.005</td>\n","      <td>80.0</td>\n","      <td>58.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20170101</td>\n","      <td>강남대로</td>\n","      <td>0.082</td>\n","      <td>0.005</td>\n","      <td>1.4</td>\n","      <td>0.007</td>\n","      <td>83.0</td>\n","      <td>58.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20170101</td>\n","      <td>강동구</td>\n","      <td>0.039</td>\n","      <td>0.003</td>\n","      <td>0.8</td>\n","      <td>0.004</td>\n","      <td>80.0</td>\n","      <td>54.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20170101</td>\n","      <td>강변북로</td>\n","      <td>0.042</td>\n","      <td>0.003</td>\n","      <td>0.8</td>\n","      <td>0.004</td>\n","      <td>81.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20170101</td>\n","      <td>강북구</td>\n","      <td>0.046</td>\n","      <td>0.003</td>\n","      <td>1.0</td>\n","      <td>0.005</td>\n","      <td>78.0</td>\n","      <td>65.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf604a46-81a5-44a5-9151-80e8fdfb4047')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cf604a46-81a5-44a5-9151-80e8fdfb4047 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cf604a46-81a5-44a5-9151-80e8fdfb4047');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-26edbc95-006d-46cf-8b64-1a224358abfe\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-26edbc95-006d-46cf-8b64-1a224358abfe')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-26edbc95-006d-46cf-8b64-1a224358abfe button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"aEJ_463fnGSu","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1696149993598,"user_tz":-540,"elapsed":1159,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"0fa141e9-c14b-4d92-b326-99bac75d794c"},"source":["# [3-3] './data_01/data_day_2018.xlsx' 파일을 가져와 df2018이라는 이름을 부여합니다.\n","df2018=pd.read_excel('./data_01/data_day_2018.xlsx',engine='openpyxl')\n","df2018.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       측정일시  측정소명  이산화질소농도(ppm)  오존농도(ppm)  이산화탄소농도(ppm)  아황산가스(ppm)  \\\n","0  20180101   강남구         0.033      0.010           0.6       0.006   \n","1  20180101  강남대로         0.040      0.007           0.8       0.006   \n","2  20180101   강동구         0.038      0.010           0.7       0.005   \n","3  20180101  강변북로         0.033      0.008           0.6       0.005   \n","4  20180101   강북구         0.026      0.018           0.6       0.004   \n","\n","   미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)  \n","0       34.0        22.0  \n","1        NaN        17.0  \n","2       48.0        24.0  \n","3       48.0        15.0  \n","4       38.0        18.0  "],"text/html":["\n","  <div id=\"df-24df9330-fe99-48ea-adf6-a4f42a14eb12\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>이산화질소농도(ppm)</th>\n","      <th>오존농도(ppm)</th>\n","      <th>이산화탄소농도(ppm)</th>\n","      <th>아황산가스(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20180101</td>\n","      <td>강남구</td>\n","      <td>0.033</td>\n","      <td>0.010</td>\n","      <td>0.6</td>\n","      <td>0.006</td>\n","      <td>34.0</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20180101</td>\n","      <td>강남대로</td>\n","      <td>0.040</td>\n","      <td>0.007</td>\n","      <td>0.8</td>\n","      <td>0.006</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20180101</td>\n","      <td>강동구</td>\n","      <td>0.038</td>\n","      <td>0.010</td>\n","      <td>0.7</td>\n","      <td>0.005</td>\n","      <td>48.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20180101</td>\n","      <td>강변북로</td>\n","      <td>0.033</td>\n","      <td>0.008</td>\n","      <td>0.6</td>\n","      <td>0.005</td>\n","      <td>48.0</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20180101</td>\n","      <td>강북구</td>\n","      <td>0.026</td>\n","      <td>0.018</td>\n","      <td>0.6</td>\n","      <td>0.004</td>\n","      <td>38.0</td>\n","      <td>18.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24df9330-fe99-48ea-adf6-a4f42a14eb12')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24df9330-fe99-48ea-adf6-a4f42a14eb12 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24df9330-fe99-48ea-adf6-a4f42a14eb12');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-11deccae-afb3-446a-8ec5-53f5c41e220e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-11deccae-afb3-446a-8ec5-53f5c41e220e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-11deccae-afb3-446a-8ec5-53f5c41e220e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"XH5N66Ee_4M8","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1696149997434,"user_tz":-540,"elapsed":3409,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"f1f14bdd-8c50-4dfb-9127-7cedec84b54a"},"source":["# [3-4] './data_01/data_day_2019.xlsx' 파일을 가져와 df2019라는 이름을 부여합니다.\n","df2019=pd.read_excel('./data_01/data_day_2019.xlsx',engine='openpyxl')\n","df2019.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       측정일시  측정소명  이산화질소농도(ppm)  오존농도(ppm)  일산화탄소농도(ppm)  아황산가스(ppm)  \\\n","0  20200818   강남구         0.022      0.006           0.4       0.003   \n","1  20200818  강남대로         0.017      0.005           0.6       0.003   \n","2  20200818   강동구           NaN      0.004           0.3       0.003   \n","3  20200818  강변북로         0.025      0.003           0.8       0.003   \n","4  20200818   강북구         0.008      0.008           0.3       0.002   \n","\n","   미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)  \n","0       28.0        21.0  \n","1       25.0        11.0  \n","2       33.0        22.0  \n","3       26.0        17.0  \n","4       32.0        18.0  "],"text/html":["\n","  <div id=\"df-e37a586e-cb5b-401b-90ab-25427a931222\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>이산화질소농도(ppm)</th>\n","      <th>오존농도(ppm)</th>\n","      <th>일산화탄소농도(ppm)</th>\n","      <th>아황산가스(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20200818</td>\n","      <td>강남구</td>\n","      <td>0.022</td>\n","      <td>0.006</td>\n","      <td>0.4</td>\n","      <td>0.003</td>\n","      <td>28.0</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20200818</td>\n","      <td>강남대로</td>\n","      <td>0.017</td>\n","      <td>0.005</td>\n","      <td>0.6</td>\n","      <td>0.003</td>\n","      <td>25.0</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20200818</td>\n","      <td>강동구</td>\n","      <td>NaN</td>\n","      <td>0.004</td>\n","      <td>0.3</td>\n","      <td>0.003</td>\n","      <td>33.0</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20200818</td>\n","      <td>강변북로</td>\n","      <td>0.025</td>\n","      <td>0.003</td>\n","      <td>0.8</td>\n","      <td>0.003</td>\n","      <td>26.0</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20200818</td>\n","      <td>강북구</td>\n","      <td>0.008</td>\n","      <td>0.008</td>\n","      <td>0.3</td>\n","      <td>0.002</td>\n","      <td>32.0</td>\n","      <td>18.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e37a586e-cb5b-401b-90ab-25427a931222')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e37a586e-cb5b-401b-90ab-25427a931222 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e37a586e-cb5b-401b-90ab-25427a931222');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bd109552-39bc-438e-8c5b-31e084eb55ef\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd109552-39bc-438e-8c5b-31e084eb55ef')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bd109552-39bc-438e-8c5b-31e084eb55ef button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"8TG7PN0jXz9q","executionInfo":{"status":"ok","timestamp":1696149998597,"user_tz":-540,"elapsed":5,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"21603d3c-c219-4a3d-9a96-e967382073fa"},"source":["temp1 = pd.DataFrame({'A': [1, 2],\n","                     'B': [3, 4]})\n","temp2 = pd.DataFrame({'A': [5, 6],\n","                     'B': [7, 8]})\n","pd.concat([temp1, temp2],axis=0)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   A  B\n","0  1  3\n","1  2  4\n","0  5  7\n","1  6  8"],"text/html":["\n","  <div id=\"df-1e5fa674-9e69-4bc3-806d-7e66add8d810\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>5</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6</td>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e5fa674-9e69-4bc3-806d-7e66add8d810')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1e5fa674-9e69-4bc3-806d-7e66add8d810 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1e5fa674-9e69-4bc3-806d-7e66add8d810');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e31f80c5-9779-4915-8958-cb207ab2b33e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e31f80c5-9779-4915-8958-cb207ab2b33e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e31f80c5-9779-4915-8958-cb207ab2b33e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"NZYRnafPYmvF","executionInfo":{"status":"ok","timestamp":1695652187415,"user_tz":-540,"elapsed":21,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"6c565e15-ccd1-4d41-fee6-6bec6235560e"},"source":["temp1 = pd.DataFrame({'A': [1, 2],\n","                     'B': [3, 4]})\n","temp2 = pd.DataFrame({'C': [5, 6],\n","                     'D': [7, 8]})\n","pd.concat([temp1, temp2], axis=1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   A  B  C  D\n","0  1  3  5  7\n","1  2  4  6  8"],"text/html":["\n","  <div id=\"df-f7bfbd73-e9b0-42e7-89da-18f7217177e8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7bfbd73-e9b0-42e7-89da-18f7217177e8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f7bfbd73-e9b0-42e7-89da-18f7217177e8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f7bfbd73-e9b0-42e7-89da-18f7217177e8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f4847421-45d9-44c1-b230-f537fa88edd4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f4847421-45d9-44c1-b230-f537fa88edd4')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f4847421-45d9-44c1-b230-f537fa88edd4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HEdKvJnBqaWG","executionInfo":{"status":"ok","timestamp":1696150003317,"user_tz":-540,"elapsed":377,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"f824d64a-287f-4f9c-c0e0-c0030de6287b"},"source":["# [3-5] df2016, df2017, df2018, df2019를 합쳐 한 개의 DataFrame으로 만들어 df라는 이름을 지정합니다.\n","dfList=[df2016,df2017,df2018,df2019]\n","df= pd.concat(dfList,axis=0) #세로로 합산 가로 말고!\n","df.shape\n","\n","\n","# df의 shape을 출력하여 전체 행, 열의 수를 확인합니다.\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(60208, 9)"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","metadata":{"id":"_JNQxPHnAGHl"},"source":["여기서 잠깐! 파일이 많으면요?\n","- 파일이름 목록을 가져오는 glob 모듈의 glob 함수를 사용함\n","- 시험 대비용은 아님"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G0DXgtvXEZDw","executionInfo":{"status":"ok","timestamp":1694355394910,"user_tz":-540,"elapsed":279,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"fc53699e-a28e-4399-bd7f-fc3587134c55"},"source":["import glob\n","glob.glob('data_01/data_day_*.xlsx')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['data_01/data_day_2017.xlsx',\n"," 'data_01/data_day_2018.xlsx',\n"," 'data_01/data_day_2019.xlsx',\n"," 'data_01/data_day_2016.xlsx']"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s3R2ofDRbfjk","executionInfo":{"status":"ok","timestamp":1633957483410,"user_tz":-540,"elapsed":247,"user":{"displayName":"윤소영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"10805103917170170851"}},"outputId":"5afec69c-9558-4375-a638-479c9aadd0ee"},"source":["#[TIP] 만일 파일이름을 정렬하고 싶다면 sorted() 함수를 사용합니다.\n","# (-.- 강의에서는 언급을 몬했어요 ㅎ)\n","sorted(glob.glob('data_01/data_day_*.xlsx'))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['data_01/data_day_2016.xlsx',\n"," 'data_01/data_day_2017.xlsx',\n"," 'data_01/data_day_2018.xlsx',\n"," 'data_01/data_day_2019.xlsx']"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Aj139EKTANNU","executionInfo":{"status":"ok","timestamp":1694355543213,"user_tz":-540,"elapsed":7145,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"374697f5-142f-4f7c-852b-625538e47020"},"source":["import glob\n","dfList = []\n","for x in sorted(glob.glob('data_01/data_day_*.xlsx')):\n","    temp = pd.read_excel(x)\n","    dfList.append(temp)\n","\n","df = pd.concat(dfList, axis=0)\n","df.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(60208, 9)"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lCIp_TusqzCl","executionInfo":{"status":"ok","timestamp":1694355853600,"user_tz":-540,"elapsed":477,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"4f6b1803-007e-4df3-891a-073704ad068c"},"source":["# [3-6] df의 row의 개수 및 각 column의 정보 및 메모리 사용량을 확인합니다.\n","# 몇몇 컬럼에 대한 정보가 부족한 것을 확인할 수 있습니다.\n","print(df2016.shape,df2017.shape,df2018.shape,df2019.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(14269, 8) (14235, 8) (12447, 8) (19257, 8)\n"]}]},{"cell_type":"code","metadata":{"id":"dev4sMXeq75w"},"source":["# [3-7] df의 마지막 3개 행을 출력해 봅니다.\n","# 데이터가 총 60208인데 마지막 행의 번호가 올바르지 않은 것을 볼 수 있습니다.\n","# 이것은 concat을 하더라도 index는 유지 되기 때문입니다.\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ymmm82lUow3u"},"source":["# [3-8] df2016, df2017, df2018, df2019의 각 shape을 확인합니다.\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6qinfo7bbZ24","executionInfo":{"status":"ok","timestamp":1696150055502,"user_tz":-540,"elapsed":348,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"4f3df0a7-7c10-475d-90f5-617121f76465"},"source":["[ x.shape for x in dfList]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(14269, 8), (14235, 8), (12447, 8), (19257, 8)]"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"k5EPzCfIb9xS"},"source":["index, columns => 두 가지 방법 사용\n","1. 눈에 보이지 않는 integer 번호 (python에서의 index번호 개념) => 사용하고 싶음\n","2. 눈에 보이는 label (다양한 Index타입이 존재)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"3bPJrcGwq26Z","executionInfo":{"status":"ok","timestamp":1694434922312,"user_tz":-540,"elapsed":266,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"eef5928c-b564-4fdf-e660-448a7d2a352f"},"source":["# [3-9] 첫 번째 파일 마지막부터 두 번째 파일의 시작 부분의 실제 index를 확인해 봅니다.\n","# 14268:14271 의 실제 index 확인\n","df.iloc[14268:14271,:]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           측정일시  측정소명  이산화질소농도(ppm)  오존농도(ppm)  이산화탄소농도(ppm)  아황산가스(ppm)  \\\n","14268  20161231   화랑로         0.122      0.004           1.1       0.005   \n","0      20170101   강남구         0.040      0.002           0.8       0.005   \n","1      20170101  강남대로         0.082      0.005           1.4       0.007   \n","\n","       미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)  일산화탄소농도(ppm)  \n","14268       64.0         NaN           NaN  \n","0           80.0        58.0           NaN  \n","1           83.0        58.0           NaN  "],"text/html":["\n","  <div id=\"df-042ae3ea-c42d-4d57-9b5a-49844f7e7953\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>이산화질소농도(ppm)</th>\n","      <th>오존농도(ppm)</th>\n","      <th>이산화탄소농도(ppm)</th>\n","      <th>아황산가스(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","      <th>일산화탄소농도(ppm)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14268</th>\n","      <td>20161231</td>\n","      <td>화랑로</td>\n","      <td>0.122</td>\n","      <td>0.004</td>\n","      <td>1.1</td>\n","      <td>0.005</td>\n","      <td>64.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>20170101</td>\n","      <td>강남구</td>\n","      <td>0.040</td>\n","      <td>0.002</td>\n","      <td>0.8</td>\n","      <td>0.005</td>\n","      <td>80.0</td>\n","      <td>58.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20170101</td>\n","      <td>강남대로</td>\n","      <td>0.082</td>\n","      <td>0.005</td>\n","      <td>1.4</td>\n","      <td>0.007</td>\n","      <td>83.0</td>\n","      <td>58.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-042ae3ea-c42d-4d57-9b5a-49844f7e7953')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-042ae3ea-c42d-4d57-9b5a-49844f7e7953 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-042ae3ea-c42d-4d57-9b5a-49844f7e7953');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1d5785fd-55aa-4b5f-baad-987665cc9b83\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d5785fd-55aa-4b5f-baad-987665cc9b83')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1d5785fd-55aa-4b5f-baad-987665cc9b83 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"on6WeqJSx3aX"},"source":["여러개 DataFrame을 합친 경우 index 번호를 RangeIndex로 새롭게 부여\n","- pd.concat([df1, df2...], ignore_index=True)\n","- DataFrame.index = pd.RangeIndex(len(df))"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":161},"id":"akPsDzDwraOV","executionInfo":{"status":"ok","timestamp":1696150065588,"user_tz":-540,"elapsed":371,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"48583e6c-f39c-47fb-c229-33200fe752a1"},"source":["# [3-10] 해결방법 1 : index 번호 정리하면서 합치기\n","dfList = [df2016, df2017, df2018, df2019]\n","df2 = pd.concat(dfList,ignore_index=True)\n","df2.tail(3)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           측정일시 측정소명  이산화질소농도(ppm)  오존농도(ppm)  이산화탄소농도(ppm)  아황산가스(ppm)  \\\n","60205  20190818   행주         0.014      0.060           NaN       0.004   \n","60206  20190818  홍릉로         0.027      0.047           NaN       0.004   \n","60207  20190818  화랑로         0.022      0.040           NaN       0.003   \n","\n","       미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)  일산화탄소농도(ppm)  \n","60205       25.0        13.0           0.5  \n","60206       30.0        20.0           0.7  \n","60207       13.0        13.0           0.3  "],"text/html":["\n","  <div id=\"df-063b3c9c-bc5e-4cce-b44a-53cf0b2cb3c1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>이산화질소농도(ppm)</th>\n","      <th>오존농도(ppm)</th>\n","      <th>이산화탄소농도(ppm)</th>\n","      <th>아황산가스(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","      <th>일산화탄소농도(ppm)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>60205</th>\n","      <td>20190818</td>\n","      <td>행주</td>\n","      <td>0.014</td>\n","      <td>0.060</td>\n","      <td>NaN</td>\n","      <td>0.004</td>\n","      <td>25.0</td>\n","      <td>13.0</td>\n","      <td>0.5</td>\n","    </tr>\n","    <tr>\n","      <th>60206</th>\n","      <td>20190818</td>\n","      <td>홍릉로</td>\n","      <td>0.027</td>\n","      <td>0.047</td>\n","      <td>NaN</td>\n","      <td>0.004</td>\n","      <td>30.0</td>\n","      <td>20.0</td>\n","      <td>0.7</td>\n","    </tr>\n","    <tr>\n","      <th>60207</th>\n","      <td>20190818</td>\n","      <td>화랑로</td>\n","      <td>0.022</td>\n","      <td>0.040</td>\n","      <td>NaN</td>\n","      <td>0.003</td>\n","      <td>13.0</td>\n","      <td>13.0</td>\n","      <td>0.3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-063b3c9c-bc5e-4cce-b44a-53cf0b2cb3c1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-063b3c9c-bc5e-4cce-b44a-53cf0b2cb3c1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-063b3c9c-bc5e-4cce-b44a-53cf0b2cb3c1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c33c22a7-fd6c-4124-931c-0452fa3c9993\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c33c22a7-fd6c-4124-931c-0452fa3c9993')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c33c22a7-fd6c-4124-931c-0452fa3c9993 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3_nwo3P_rSrS","executionInfo":{"status":"ok","timestamp":1695652310480,"user_tz":-540,"elapsed":305,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"cc19412f-0e78-4d62-82ff-f57da863002a"},"source":["# [3-11] 해결방법 2 : index를 만들어 사용하기\n","df.index = pd.RangeIndex(len(df))\n","df.info()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 60208 entries, 0 to 60207\n","Data columns (total 9 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   측정일시          60208 non-null  int64  \n"," 1   측정소명          60208 non-null  object \n"," 2   이산화질소농도(ppm)  58050 non-null  float64\n"," 3   오존농도(ppm)     58075 non-null  float64\n"," 4   이산화탄소농도(ppm)  40421 non-null  float64\n"," 5   아황산가스(ppm)    58075 non-null  float64\n"," 6   미세먼지(㎍/㎥)     59327 non-null  float64\n"," 7   초미세먼지(㎍/㎥)    58429 non-null  float64\n"," 8   일산화탄소농도(ppm)  17591 non-null  float64\n","dtypes: float64(7), int64(1), object(1)\n","memory usage: 4.1+ MB\n"]}]},{"cell_type":"markdown","metadata":{"id":"7xKwNokETzZ6"},"source":["### 3-2.날짜 타입변경"]},{"cell_type":"code","metadata":{"id":"6YVKWNcUUadE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694434933670,"user_tz":-540,"elapsed":254,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"9d0fbeae-18be-4443-96bc-3972f921f506"},"source":["# [3-12] df의 컬럼별 데이터 타입을 확인합니다.\n","df.dtypes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["측정일시              int64\n","측정소명             object\n","이산화질소농도(ppm)    float64\n","오존농도(ppm)       float64\n","이산화탄소농도(ppm)    float64\n","아황산가스(ppm)      float64\n","미세먼지(㎍/㎥)       float64\n","초미세먼지(㎍/㎥)      float64\n","일산화탄소농도(ppm)    float64\n","dtype: object"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"wyUM2zVPUWOb","colab":{"base_uri":"https://localhost:8080/","height":358},"executionInfo":{"status":"error","timestamp":1696150093456,"user_tz":-540,"elapsed":452,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"da059dcf-ac7a-4b43-8b7b-d97808162518"},"source":["# [3-13] df의 '측정일시'에 대해서 astype을 사용해 데이터 타입을 datetime으로 변경합니다.\n","# 올바르게 변경되지 않는 것을 확인할 수 있습니다.\n","df['측정일시'].astype(np.datetime64)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-21-94cb2c0f41c6>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# [3-13] df의 '측정일시'에 대해서 astype을 사용해 데이터 타입을 datetime으로 변경합니다.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# 올바르게 변경되지 않는 것을 확인할 수 있습니다.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'측정일시'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdatetime64\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   6238\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6239\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6240\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6241\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6242\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    446\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    447\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 448\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    449\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    450\u001b[0m     def convert(\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    350\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    351\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 352\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    353\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    354\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    524\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    525\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 526\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    527\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    528\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/dtypes/astype.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    297\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    298\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 299\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    300\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    301\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/dtypes/astype.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m    228\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    229\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 230\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    231\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    232\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/dtypes/astype.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m    164\u001b[0m             \u001b[0;34mf\"'{dtype.name}[ns]' instead.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    165\u001b[0m         )\n\u001b[0;32m--> 166\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    167\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    168\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: The 'datetime64' dtype has no unit. Please pass in 'datetime64[ns]' instead."]}]},{"cell_type":"markdown","metadata":{"id":"9qub7d8720iF"},"source":["날짜, 시간 타입 변경 (youtube 분석에서 했었어요!)\n","- pd.to_datetime(Series, format='형식')\n","    - %Y: 4글자 년도, %y : 2글자 년도, %m : 2글자 월, %d : 2글자 일\n","    - 다양한 형식 문자들 : https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior\n","    - format의 지정이 필수는 아님"]},{"cell_type":"code","metadata":{"id":"RUScfELYP0wV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694434945522,"user_tz":-540,"elapsed":279,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"a717b858-9e09-40e8-8195-e53f8b951ed9"},"source":["# [3-14] df의 '측정일시'에 대해서 format='%Y%m%d'을 지정하여 데이터 타입을 datetime으로 변경합니다.\n","# 올바르게 변경되는 것을 확인할 수 있습니다.\n","pd.to_datetime(df['측정일시'],format='%Y%m%d')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       2016-01-01\n","1       2016-01-01\n","2       2016-01-01\n","3       2016-01-01\n","4       2016-01-01\n","           ...    \n","19252   2019-08-18\n","19253   2019-08-18\n","19254   2019-08-18\n","19255   2019-08-18\n","19256   2019-08-18\n","Name: 측정일시, Length: 60208, dtype: datetime64[ns]"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"7ZyioEL9ImCX"},"source":["DataFrame.insert(위치, 이름, 데이터)\n","- return이 없는 함수 (inplace 동작)\n","- https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.insert.html"]},{"cell_type":"code","metadata":{"id":"_2bC9eQhQ58V","colab":{"base_uri":"https://localhost:8080/","height":164},"executionInfo":{"status":"ok","timestamp":1696150130076,"user_tz":-540,"elapsed":411,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"6745c000-51bd-4086-b4c1-e2c96f109c00"},"source":["# [3-15] df의 '측정일시'에 대해서 format='%Y%m%d'을 지정하여 데이터 타입을 datetime으로 변경한 뒤\n","# '측정일시2' 컬럼을 '측정일시' 뒤에 삽입합니다\n","#df['측정일시2'] = pd.to_datetime(df['측정일시'], format='%Y%m%d')   # 뒤에 추가\n","df.insert(1,'측정일시2',pd.to_datetime(df['측정일시'], format='%Y%m%d'))\n","df.head(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       측정일시      측정일시2  측정소명  이산화질소농도(ppm)  오존농도(ppm)  이산화탄소농도(ppm)  \\\n","0  20160101 2016-01-01   강남구         0.047      0.006           0.8   \n","1  20160101 2016-01-01  강남대로         0.054      0.004           1.2   \n","\n","   아황산가스(ppm)  미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)  일산화탄소농도(ppm)  \n","0       0.006       73.0        44.0           NaN  \n","1       0.009       85.0        52.0           NaN  "],"text/html":["\n","  <div id=\"df-870c9de7-2295-4517-b2bb-038e27b516fa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정일시2</th>\n","      <th>측정소명</th>\n","      <th>이산화질소농도(ppm)</th>\n","      <th>오존농도(ppm)</th>\n","      <th>이산화탄소농도(ppm)</th>\n","      <th>아황산가스(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","      <th>일산화탄소농도(ppm)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20160101</td>\n","      <td>2016-01-01</td>\n","      <td>강남구</td>\n","      <td>0.047</td>\n","      <td>0.006</td>\n","      <td>0.8</td>\n","      <td>0.006</td>\n","      <td>73.0</td>\n","      <td>44.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20160101</td>\n","      <td>2016-01-01</td>\n","      <td>강남대로</td>\n","      <td>0.054</td>\n","      <td>0.004</td>\n","      <td>1.2</td>\n","      <td>0.009</td>\n","      <td>85.0</td>\n","      <td>52.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-870c9de7-2295-4517-b2bb-038e27b516fa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-870c9de7-2295-4517-b2bb-038e27b516fa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-870c9de7-2295-4517-b2bb-038e27b516fa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-46c5105c-a77f-4357-88c6-cb76134d5290\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46c5105c-a77f-4357-88c6-cb76134d5290')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-46c5105c-a77f-4357-88c6-cb76134d5290 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"otH-GDuNRMZx"},"source":["# [3-16] df에 datetime64 데이터타입을 갖는 '측정일시2' 컬럼이 추가된 것을 확인합니다.\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qw2Wk4mTRS7z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694435006478,"user_tz":-540,"elapsed":5,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"fef4bdd9-412c-43bd-e3b6-e4030a6f1882"},"source":["# [3-17] datetime 타입은 accessor - dt를 사용할 수 있습니다.\n","# https://pandas.pydata.org/pandas-docs/stable/reference/series.html#accessors\n","# df의 '측정일시2' 컬럼의 dt accessor를 사용하여 year 정보만 확인합니다.\n","df['측정일시2'].dt.year #Series.dt.year 꼴\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        2016\n","1        2016\n","2        2016\n","3        2016\n","4        2016\n","         ... \n","19252    2019\n","19253    2019\n","19254    2019\n","19255    2019\n","19256    2019\n","Name: 측정일시2, Length: 60208, dtype: int64"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"mT16ITXIRhtQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694435009365,"user_tz":-540,"elapsed":251,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"86617e18-f8de-472a-fb37-be95a045a4a4"},"source":["# [3-18] df의 '측정일시2' 컬럼의 dt를 사용하여 month 정보만 확인합니다.\n","df['측정일시2'].dt.month"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        1\n","1        1\n","2        1\n","3        1\n","4        1\n","        ..\n","19252    8\n","19253    8\n","19254    8\n","19255    8\n","19256    8\n","Name: 측정일시2, Length: 60208, dtype: int64"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"xGNxLEqcRnHh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694357118657,"user_tz":-540,"elapsed":290,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"71973993-d68b-4dbd-b50c-11391e693c7b"},"source":["# [3-19] df의 '측정일시2' 컬럼의 dt를 사용하여 day 정보만 확인합니다.\n","df['측정일시2'].dt.day"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         1\n","1         1\n","2         1\n","3         1\n","4         1\n","         ..\n","60203    18\n","60204    18\n","60205    18\n","60206    18\n","60207    18\n","Name: 측정일시2, Length: 60208, dtype: int64"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["df['측정일시2'].dt.dayofweek"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1eNgr1vWjbwb","executionInfo":{"status":"ok","timestamp":1694357116958,"user_tz":-540,"elapsed":280,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"211ccfe9-78ff-4ad2-936b-f688d40bc821"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        4\n","1        4\n","2        4\n","3        4\n","4        4\n","        ..\n","60203    6\n","60204    6\n","60205    6\n","60206    6\n","60207    6\n","Name: 측정일시2, Length: 60208, dtype: int64"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","metadata":{"id":"4GO83_cmRtDI","colab":{"base_uri":"https://localhost:8080/","height":164},"executionInfo":{"status":"ok","timestamp":1696150134190,"user_tz":-540,"elapsed":442,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"54ec376b-990d-4ed0-b6a8-bd25826dfc49"},"source":["# [3-20] df에 '년', '월', '일' 컬럼을 추가합니다.\n","df['년']=df['측정일시2'].dt.year\n","df['월']=df['측정일시2'].dt.month\n","df['일']=df['측정일시2'].dt.day\n","\n","df.head(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       측정일시      측정일시2  측정소명  이산화질소농도(ppm)  오존농도(ppm)  이산화탄소농도(ppm)  \\\n","0  20160101 2016-01-01   강남구         0.047      0.006           0.8   \n","1  20160101 2016-01-01  강남대로         0.054      0.004           1.2   \n","\n","   아황산가스(ppm)  미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)  일산화탄소농도(ppm)     년  월  일  \n","0       0.006       73.0        44.0           NaN  2016  1  1  \n","1       0.009       85.0        52.0           NaN  2016  1  1  "],"text/html":["\n","  <div id=\"df-6afeb38f-4df8-48ee-b8f8-8e7c01122e6d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정일시2</th>\n","      <th>측정소명</th>\n","      <th>이산화질소농도(ppm)</th>\n","      <th>오존농도(ppm)</th>\n","      <th>이산화탄소농도(ppm)</th>\n","      <th>아황산가스(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","      <th>일산화탄소농도(ppm)</th>\n","      <th>년</th>\n","      <th>월</th>\n","      <th>일</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20160101</td>\n","      <td>2016-01-01</td>\n","      <td>강남구</td>\n","      <td>0.047</td>\n","      <td>0.006</td>\n","      <td>0.8</td>\n","      <td>0.006</td>\n","      <td>73.0</td>\n","      <td>44.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20160101</td>\n","      <td>2016-01-01</td>\n","      <td>강남대로</td>\n","      <td>0.054</td>\n","      <td>0.004</td>\n","      <td>1.2</td>\n","      <td>0.009</td>\n","      <td>85.0</td>\n","      <td>52.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6afeb38f-4df8-48ee-b8f8-8e7c01122e6d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6afeb38f-4df8-48ee-b8f8-8e7c01122e6d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6afeb38f-4df8-48ee-b8f8-8e7c01122e6d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-83247868-7034-42e1-aa93-ee74f886b6f0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-83247868-7034-42e1-aa93-ee74f886b6f0')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-83247868-7034-42e1-aa93-ee74f886b6f0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","metadata":{"id":"45U498qCI_30"},"source":["DataFrame.drop([컬럼이름1, 컬럼이름2,...], axis=1)\n","- 컬럼 삭제\n","- 목록에 있는 컬럼이 삭제된 DataFrame을 반환\n","\n","DataFrame.drop([행이름1, 행이름2, ...], axis=0)\n","- 행 삭제\n","- 목록에 있는 행이 삭제된 DataFrame을 반환\n","\n","삭제할 컬럼 또는 행이 1개인 경우 목록이 아닌 한 개 이름만 지정할 수 있음"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":510},"id":"DHGCfpnSX8c1","executionInfo":{"status":"ok","timestamp":1694435017318,"user_tz":-540,"elapsed":291,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"26984b47-29c5-4f5f-b62d-5821d2cd7bb2"},"source":["# [3-21] '측정일시2' 컬럼이 필요 없으므로 제거합니다.\n","# 컬럼을 제거하기 위해서는 drop 함수에서 axis=1 을 사용해야 합니다.\n","# 삭제된 DataFrame을 df2 이름을 지정합니다.\n","#df.drop('측정일시2', axis=1)\n","df2 = df.drop(columns=['측정일시2'])\n","df2\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           측정일시  측정소명  이산화질소농도(ppm)  오존농도(ppm)  이산화탄소농도(ppm)  아황산가스(ppm)  \\\n","0      20160101   강남구         0.047      0.006           0.8       0.006   \n","1      20160101  강남대로         0.054      0.004           1.2       0.009   \n","2      20160101   강동구         0.043      0.002           0.9       0.004   \n","3      20160101  강변북로         0.046      0.004           1.1       0.006   \n","4      20160101   강북구         0.047      0.004           1.1       0.004   \n","...         ...   ...           ...        ...           ...         ...   \n","19252  20190818  청계천로         0.019      0.055           NaN       0.005   \n","19253  20190818  한강대로         0.030      0.031           NaN       0.004   \n","19254  20190818    행주         0.014      0.060           NaN       0.004   \n","19255  20190818   홍릉로         0.027      0.047           NaN       0.004   \n","19256  20190818   화랑로         0.022      0.040           NaN       0.003   \n","\n","       미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)  일산화탄소농도(ppm)     년  월   일  \n","0           73.0        44.0           NaN  2016  1   1  \n","1           85.0        52.0           NaN  2016  1   1  \n","2           77.0        45.0           NaN  2016  1   1  \n","3           73.0        39.0           NaN  2016  1   1  \n","4           77.0        52.0           NaN  2016  1   1  \n","...          ...         ...           ...   ... ..  ..  \n","19252       24.0        16.0           0.5  2019  8  18  \n","19253       26.0        15.0           0.5  2019  8  18  \n","19254       25.0        13.0           0.5  2019  8  18  \n","19255       30.0        20.0           0.7  2019  8  18  \n","19256       13.0        13.0           0.3  2019  8  18  \n","\n","[60208 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-b6df2bae-f822-4bf2-a12d-b3d4c6727d6f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>이산화질소농도(ppm)</th>\n","      <th>오존농도(ppm)</th>\n","      <th>이산화탄소농도(ppm)</th>\n","      <th>아황산가스(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","      <th>일산화탄소농도(ppm)</th>\n","      <th>년</th>\n","      <th>월</th>\n","      <th>일</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20160101</td>\n","      <td>강남구</td>\n","      <td>0.047</td>\n","      <td>0.006</td>\n","      <td>0.8</td>\n","      <td>0.006</td>\n","      <td>73.0</td>\n","      <td>44.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20160101</td>\n","      <td>강남대로</td>\n","      <td>0.054</td>\n","      <td>0.004</td>\n","      <td>1.2</td>\n","      <td>0.009</td>\n","      <td>85.0</td>\n","      <td>52.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20160101</td>\n","      <td>강동구</td>\n","      <td>0.043</td>\n","      <td>0.002</td>\n","      <td>0.9</td>\n","      <td>0.004</td>\n","      <td>77.0</td>\n","      <td>45.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20160101</td>\n","      <td>강변북로</td>\n","      <td>0.046</td>\n","      <td>0.004</td>\n","      <td>1.1</td>\n","      <td>0.006</td>\n","      <td>73.0</td>\n","      <td>39.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20160101</td>\n","      <td>강북구</td>\n","      <td>0.047</td>\n","      <td>0.004</td>\n","      <td>1.1</td>\n","      <td>0.004</td>\n","      <td>77.0</td>\n","      <td>52.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>19252</th>\n","      <td>20190818</td>\n","      <td>청계천로</td>\n","      <td>0.019</td>\n","      <td>0.055</td>\n","      <td>NaN</td>\n","      <td>0.005</td>\n","      <td>24.0</td>\n","      <td>16.0</td>\n","      <td>0.5</td>\n","      <td>2019</td>\n","      <td>8</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>19253</th>\n","      <td>20190818</td>\n","      <td>한강대로</td>\n","      <td>0.030</td>\n","      <td>0.031</td>\n","      <td>NaN</td>\n","      <td>0.004</td>\n","      <td>26.0</td>\n","      <td>15.0</td>\n","      <td>0.5</td>\n","      <td>2019</td>\n","      <td>8</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>19254</th>\n","      <td>20190818</td>\n","      <td>행주</td>\n","      <td>0.014</td>\n","      <td>0.060</td>\n","      <td>NaN</td>\n","      <td>0.004</td>\n","      <td>25.0</td>\n","      <td>13.0</td>\n","      <td>0.5</td>\n","      <td>2019</td>\n","      <td>8</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>19255</th>\n","      <td>20190818</td>\n","      <td>홍릉로</td>\n","      <td>0.027</td>\n","      <td>0.047</td>\n","      <td>NaN</td>\n","      <td>0.004</td>\n","      <td>30.0</td>\n","      <td>20.0</td>\n","      <td>0.7</td>\n","      <td>2019</td>\n","      <td>8</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>19256</th>\n","      <td>20190818</td>\n","      <td>화랑로</td>\n","      <td>0.022</td>\n","      <td>0.040</td>\n","      <td>NaN</td>\n","      <td>0.003</td>\n","      <td>13.0</td>\n","      <td>13.0</td>\n","      <td>0.3</td>\n","      <td>2019</td>\n","      <td>8</td>\n","      <td>18</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>60208 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6df2bae-f822-4bf2-a12d-b3d4c6727d6f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b6df2bae-f822-4bf2-a12d-b3d4c6727d6f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b6df2bae-f822-4bf2-a12d-b3d4c6727d6f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7d4e5d1f-158c-4bee-b1c5-94fd823c1a65\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7d4e5d1f-158c-4bee-b1c5-94fd823c1a65')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7d4e5d1f-158c-4bee-b1c5-94fd823c1a65 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"-UmM8HBhdade"},"source":["df2.to_csv('fine_dust.csv', index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sHPEafaWcSdU"},"source":["df2 = pd.read_csv('fine_dust.csv')\n","df2.head(2)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DKciWUW9r6ml"},"source":["### 3-3.결측치 확인\n","- [pandas-02] drinks 에서 다루어 본 내용입니다.\n","- heatmap 그래프를 사용한 결측치 확인방법을 알아보겠습니다.\n","- 데이터가 많을 때 직관적인 판단을 할 수 있게 됩니다.\n"]},{"cell_type":"code","metadata":{"id":"yvaHU-lit56z"},"source":["# 데이타가 많은 경우 모두 출력 안되고 ... 으로 생략해서 출력됩니다.\n","# 생략되지 않는 행, 열의 개수를 설정하여 생략되지 않고 출력되도록 합니다.\n","pd.set_option('display.max_rows', 300)    #출력할 max row를 지정\n","pd.set_option('display.max_columns', 100)  #출력할 max columns를 지정"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OA4lGsS3NfkG"},"source":["# [3-22] df2를 복사하여 df를 생성합니다.\n","# 앞으로 결측치에 대한 처리는 df를 사용합니다.\n","df = df2.copy()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"x0KbaSd5r5-b","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694435245067,"user_tz":-540,"elapsed":5,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"5ae04337-c624-40c0-aa04-f0dc6b378de1"},"source":["# [3-23] df의 행별 결측치를 조사합니다.\n","df.isna().sum(axis=0) #0은 생략가능"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["측정일시                0\n","측정소명                0\n","이산화질소농도(ppm)     2158\n","오존농도(ppm)        2133\n","이산화탄소농도(ppm)    19787\n","아황산가스(ppm)       2133\n","미세먼지(㎍/㎥)         881\n","초미세먼지(㎍/㎥)       1779\n","일산화탄소농도(ppm)    42617\n","년                   0\n","월                   0\n","일                   0\n","dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"mDvk4TC4Zxa1","colab":{"base_uri":"https://localhost:8080/","height":341},"executionInfo":{"status":"ok","timestamp":1696150187640,"user_tz":-540,"elapsed":424,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"663d0eff-9d6e-4414-cda7-8108cd61d982"},"source":["# [3-24] '측정일시'를 index로 설정하고,\n","# index 기준으로 오름차순 정렬해서 df1으로 이름 붙입니다.\n","# 그래프에서 y축으로 사용하려고 합니다.\n","df1 = df.set_index('측정일시').sort_index()\n","df1.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              측정일시2 측정소명  이산화질소농도(ppm)  오존농도(ppm)  이산화탄소농도(ppm)  아황산가스(ppm)  \\\n","측정일시                                                                          \n","20160101 2016-01-01  강남구         0.047      0.006           0.8       0.006   \n","20160101 2016-01-01  성북구         0.056      0.005           1.3       0.007   \n","20160101 2016-01-01  송파구         0.046      0.004           1.1       0.006   \n","20160101 2016-01-01  신촌로         0.060      0.004           1.3       0.005   \n","20160101 2016-01-01  양천구         0.049      0.008           1.1       0.005   \n","\n","          미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)  일산화탄소농도(ppm)     년  월  일  \n","측정일시                                                       \n","20160101       73.0        44.0           NaN  2016  1  1  \n","20160101       71.0        45.0           NaN  2016  1  1  \n","20160101       64.0        39.0           NaN  2016  1  1  \n","20160101       87.0        40.0           NaN  2016  1  1  \n","20160101       82.0        65.0           NaN  2016  1  1  "],"text/html":["\n","  <div id=\"df-ab9a47ab-2374-4120-b6a8-9ff54ee6bb37\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시2</th>\n","      <th>측정소명</th>\n","      <th>이산화질소농도(ppm)</th>\n","      <th>오존농도(ppm)</th>\n","      <th>이산화탄소농도(ppm)</th>\n","      <th>아황산가스(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","      <th>일산화탄소농도(ppm)</th>\n","      <th>년</th>\n","      <th>월</th>\n","      <th>일</th>\n","    </tr>\n","    <tr>\n","      <th>측정일시</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>20160101</th>\n","      <td>2016-01-01</td>\n","      <td>강남구</td>\n","      <td>0.047</td>\n","      <td>0.006</td>\n","      <td>0.8</td>\n","      <td>0.006</td>\n","      <td>73.0</td>\n","      <td>44.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20160101</th>\n","      <td>2016-01-01</td>\n","      <td>성북구</td>\n","      <td>0.056</td>\n","      <td>0.005</td>\n","      <td>1.3</td>\n","      <td>0.007</td>\n","      <td>71.0</td>\n","      <td>45.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20160101</th>\n","      <td>2016-01-01</td>\n","      <td>송파구</td>\n","      <td>0.046</td>\n","      <td>0.004</td>\n","      <td>1.1</td>\n","      <td>0.006</td>\n","      <td>64.0</td>\n","      <td>39.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20160101</th>\n","      <td>2016-01-01</td>\n","      <td>신촌로</td>\n","      <td>0.060</td>\n","      <td>0.004</td>\n","      <td>1.3</td>\n","      <td>0.005</td>\n","      <td>87.0</td>\n","      <td>40.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20160101</th>\n","      <td>2016-01-01</td>\n","      <td>양천구</td>\n","      <td>0.049</td>\n","      <td>0.008</td>\n","      <td>1.1</td>\n","      <td>0.005</td>\n","      <td>82.0</td>\n","      <td>65.0</td>\n","      <td>NaN</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab9a47ab-2374-4120-b6a8-9ff54ee6bb37')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ab9a47ab-2374-4120-b6a8-9ff54ee6bb37 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ab9a47ab-2374-4120-b6a8-9ff54ee6bb37');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-422664d6-1448-4757-a90e-f33c9fa99c74\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-422664d6-1448-4757-a90e-f33c9fa99c74')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-422664d6-1448-4757-a90e-f33c9fa99c74 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"SdqsYfukdB1M"},"source":["https://seaborn.pydata.org/generated/seaborn.heatmap.html\n","# vmax, vmin, cbar"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":778},"id":"EmFzNhum7SuN","executionInfo":{"status":"ok","timestamp":1696152948217,"user_tz":-540,"elapsed":5514,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"777ba0f8-2004-4d05-8c55-c806ae33ad02"},"source":["# [3-25] df1의 '이산화질소농도(ppm)':'일산화탄소농도(ppm)'의 결측치의 상태를 그래프로 확인해 봅니다\n","# seaborn.heatmap()를 사용하며, df.isna()를 데이터로 지정해 확인할 수 있습니다.\n","# 흐린색이 결측치를 의미합니다.\n","import koreanize_matplotlib\n","\n","plt.figure(figsize=(14, 10))\n","ax = sns.heatmap(df1.loc[:, '이산화질소농도(ppm)':'일산화탄소농도(ppm)'].isna(), cbar=False) # cbar는 여러가지 중간색상이 있을 때!\n","ax.set_xticklabels(ax.get_xticklabels(),fontsize=10, rotation=0) # x축에 레이블\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"bY4isPNASSWj"},"source":["데이터 중에서 오존농도, 미세먼지, 초미세먼지에 대해서만 사용할 것이므로, indexing한 뒤 다시 결측치 정보를 확인합니다."]},{"cell_type":"code","metadata":{"id":"E7CzVzPOyvVR"},"source":["df['컬럼명'] : 1개의 컬럼을 Series로 반환\n","df[['컬럼명1', '컬럼명2', ...]]  : 여러개의 컬럼을 DataFrame으로 반환\n","df['행이름1':'행이름N'] : 행이름1 ~ 행이름 N 전까지를 반환\n","df[조건] : 행 중에서 조건이 True인 행을 반환"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"zQhQc-JxLG0F","executionInfo":{"status":"ok","timestamp":1696153122280,"user_tz":-540,"elapsed":451,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"568e287e-ee76-4b6e-dd89-1c6746bfc835"},"source":["# [3-26] df1에서 '측정소명', '년', '월', '일','오존농도(ppm)', '미세먼지(㎍/㎥)', '초미세먼지(㎍/㎥)'컬럼만\n","# 추출하여 df_dust 라는 이름을 정의합니다.\n","df_dust = df1[['측정소명','년','월','일','오존농도(ppm)','미세먼지(㎍/㎥)','초미세먼지(㎍/㎥)']]\n","df_dust.head(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         측정소명     년  월  일  오존농도(ppm)  미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)\n","측정일시                                                       \n","20160101  강남구  2016  1  1      0.006       73.0        44.0\n","20160101  성북구  2016  1  1      0.005       71.0        45.0"],"text/html":["\n","  <div id=\"df-d465138a-04bf-4694-b4df-5dc9743eff5c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정소명</th>\n","      <th>년</th>\n","      <th>월</th>\n","      <th>일</th>\n","      <th>오존농도(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","    <tr>\n","      <th>측정일시</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>20160101</th>\n","      <td>강남구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.006</td>\n","      <td>73.0</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>20160101</th>\n","      <td>성북구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.005</td>\n","      <td>71.0</td>\n","      <td>45.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d465138a-04bf-4694-b4df-5dc9743eff5c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d465138a-04bf-4694-b4df-5dc9743eff5c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d465138a-04bf-4694-b4df-5dc9743eff5c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c3dbeab5-f148-439e-9ed0-95217dcf9541\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c3dbeab5-f148-439e-9ed0-95217dcf9541')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c3dbeab5-f148-439e-9ed0-95217dcf9541 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AgC_nkDSYzSs","executionInfo":{"status":"ok","timestamp":1694436089007,"user_tz":-540,"elapsed":5,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"7986dc17-3fdb-4529-b22d-2c2b9d20c11a"},"source":["# [3-27] df_dust의 컬럼별 결측치 개수를 구해봅니다\n","df_dust.isna().sum().sum() #sum을 두번쓰면 Series에 Sum을 취함 (전체)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4793"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":683},"id":"1FTBKMjLZIGI","executionInfo":{"status":"ok","timestamp":1696153135081,"user_tz":-540,"elapsed":3154,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"be150779-d564-46c1-fa7b-f390e207e379"},"source":["# [3-28] df_dust의 '오존농도(ppm)':'초미세먼지(㎍/㎥)'에 대한 결측치 heatmap을 그려봅니다.\n","plt.figure(figsize=(7, 8))\n","sns.heatmap(df_dust.loc[:, '오존농도(ppm)':'초미세먼지(㎍/㎥)'].isna(), cbar=False)\n","ax.set_xticklabels(ax.get_xticklabels(),rotation=0,fontsize=12)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 700x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"noHAl58wtejh"},"source":["- DataFrame의 index를 columns로 사용 : DataFrame.reset_index()\n","- DataFrame의 columns를 index로 사용 : DataFrame.set_index('컬럼이름')\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"kkmh1k60m2No","executionInfo":{"status":"ok","timestamp":1696153138871,"user_tz":-540,"elapsed":390,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"2fa9f94b-d299-4de6-df40-b131348574b1"},"source":["# [3-29] df_dust의 index를 다시 컬럼으로 사용되도록 합니다.\n","# 다음 작업인 결측치 삭제를 사용하기 위함\n","df_dust= df_dust.reset_index()\n","df_dust.head(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       측정일시 측정소명     년  월  일  오존농도(ppm)  미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)\n","0  20160101  강남구  2016  1  1      0.006       73.0        44.0\n","1  20160101  성북구  2016  1  1      0.005       71.0        45.0"],"text/html":["\n","  <div id=\"df-440dd3ad-4651-4b32-8355-328d3984c321\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>년</th>\n","      <th>월</th>\n","      <th>일</th>\n","      <th>오존농도(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20160101</td>\n","      <td>강남구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.006</td>\n","      <td>73.0</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20160101</td>\n","      <td>성북구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.005</td>\n","      <td>71.0</td>\n","      <td>45.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-440dd3ad-4651-4b32-8355-328d3984c321')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-440dd3ad-4651-4b32-8355-328d3984c321 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-440dd3ad-4651-4b32-8355-328d3984c321');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5ac9d018-636b-4f73-9620-10496cb6dc69\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5ac9d018-636b-4f73-9620-10496cb6dc69')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5ac9d018-636b-4f73-9620-10496cb6dc69 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","metadata":{"id":"V8S5EfGParyB"},"source":["### 3-4.결측치 제거"]},{"cell_type":"markdown","metadata":{"id":"DY_Vle8Al27_"},"source":["DataFrame.dropna(axis=0, how='any', thresh=None, subset=None, inplace=False)\n","- 결측치 제거에 사용되는 메서드\n","- how='any' : 결측치가 하나라도 포함된 행 삭제\n","- how='all' : 모든 데이터가 결측치인 행 삭제\n","- axis=1 : 컬럼에 대해 동작\n","- thresh=숫자 : 숫자 이상의 데이터를 가진 행은 삭제 안함\n","- subset=[컬럼이름1, ...] : subset으로 지정된 컬럼만 사용하여 삭제 대상 검색"]},{"cell_type":"code","metadata":{"id":"9_Q2z3V8IpHm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696154050225,"user_tz":-540,"elapsed":305,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"2c3ae0f7-a655-47e4-fe4d-bf3332b927cb"},"source":["# [3-30] df_dust 에서 ['오존농도(ppm)','미세먼지(㎍/㎥)', '초미세먼지(㎍/㎥)']에서\n","# 모든 데이터가 결측치인 행을 제거하여 결과를 temp1으로 저장합니다\n","temp1 = df_dust.dropna(how='all',subset=['오존농도(ppm)','미세먼지(㎍/㎥)', '초미세먼지(㎍/㎥)'])\n","\n","# df_dust와 temp1의 행의 수 (len)을 확인하여 제거된 행의 개수를 확인합니다.\n","print(len(df_dust)-len(temp1))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["592\n"]}]},{"cell_type":"code","metadata":{"id":"1hsj4bLxvO0h","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696154052442,"user_tz":-540,"elapsed":333,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"084d75f6-5708-4c9f-cde5-15de984ed4d6"},"source":["# [3-31] df_dust 에서 ['오존농도(ppm)','미세먼지(㎍/㎥)', '초미세먼지(㎍/㎥)']에서\n","# 하나라도 결측치가 있는 행을 제거하여 결과를 temp2로 저장합니다.\n","temp2 = df_dust.dropna(how='any',subset=['오존농도(ppm)','미세먼지(㎍/㎥)', '초미세먼지(㎍/㎥)'])\n","\n","# df_dust와 temp2의 행의 수 (len)을 확인하여 제거된 행의 개수를 확인합니다.\n","print(len(df_dust)-len(temp2))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3359\n"]}]},{"cell_type":"code","metadata":{"id":"cZMJtzhlbbVJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696153795500,"user_tz":-540,"elapsed":4,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"1ba648f0-36ee-4596-956e-b8bdd860ed76"},"source":["# [3-32] df_dust 에서 ['오존농도(ppm)','미세먼지(㎍/㎥)', '초미세먼지(㎍/㎥)']에서\n","# 2개 이상의 데이터를 가진 행은 제거하지 않은 결과를 temp3로 저장합니다.\n","# (= 3개의 정보 중 1개의 데이터만 가진 행을 제거함)\n","temp3 = df_dust.dropna(thresh=2,subset=['오존농도(ppm)','미세먼지(㎍/㎥)', '초미세먼지(㎍/㎥)'])\n","\n","# df_dust와 temp3의 행의 수 (len)을 확인하여 제거된 행의 개수를 확인합니다.\n","print(len(df_dust)-len(temp3))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["842\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":683},"id":"_YJMG2LSLS-B","executionInfo":{"status":"ok","timestamp":1696153798611,"user_tz":-540,"elapsed":868,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"73b08b0c-9b26-4f82-fcfb-4c6491871aa7"},"source":["# [3-33] temp1, temp2, temp3의 '오존농도(ppm)':'초미세먼지(㎍/㎥)'에 대한 결측치 heatmap을 그려봅니다.\n","# temp1, temp3는 부분적으로 결측치가 남아있고, temp2는 결측치가 없습니다.\n","plt.figure(figsize=(7, 8))\n","sns.heatmap(temp3.loc[:, '오존농도(ppm)':'초미세먼지(㎍/㎥)'].isna(), cbar=False)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 700x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"2nIcnNxUki3y"},"source":["df.groupby(by=[컬럼1, 컬럼2, ...]).함수()\n","- 그룹 기준으로 목록을 지정하면 MultiIndex로 만들어짐\n","- MultiIndex인 경우의 indexing은 tuple을 사용함\n","- ['년', '월']을 그룹 기준으로 사용한 경우 (2017, 6) 처럼 지정함"]},{"cell_type":"code","metadata":{"id":"g722axhuTFe_","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1696154022324,"user_tz":-540,"elapsed":345,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"9bc7362f-64fe-49fb-a5a7-d6bafbdc58d8"},"source":["# [3-34] df_dust에서 '년', '월'별 '미세먼지(㎍/㎥)' 데이터의 평균을 구해\n","# DataFrame으로 만들어 meandf 라는 이름을 지정합니다.ㅣ\n","meandf = df_dust.groupby(['년','월'])[['미세먼지(㎍/㎥)']].mean()\n","meandf"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         미세먼지(㎍/㎥)\n","년    월            \n","2016 1   52.693844\n","     2   48.283273\n","     3   66.799503\n","     4   73.327039\n","     5   58.624172\n","     6   47.872304\n","     7   35.531092\n","     8   37.124378\n","     9   40.013841\n","     10  40.191363\n","     11  54.729965\n","     12  50.693522\n","2017 1   55.719138\n","     2   49.554029\n","     3   64.532392\n","     4   59.582549\n","     5   66.029826\n","     6   43.878112\n","     7   36.667496\n","     8   24.564570\n","     9   36.624786\n","     10  32.496689\n","     11  45.322222\n","     12  52.992327\n","2018 1   53.998324\n","     2   55.842459\n","     3   43.815303\n","     4   52.001222\n","     5   40.376068\n","     6   49.719231\n","     7   26.415215\n","     8   23.940299\n","     9   21.652651\n","     10  30.030576\n","     11  53.707242\n","     12  43.704176\n","2019 8   27.714286\n","     9   22.069071\n","     10  31.012975\n","     11  40.752425\n","     12  42.162968\n","2020 1   43.070856\n","     2   41.949630\n","     3   46.351002\n","     4   45.610667\n","     5   36.477082\n","     6   38.060298\n","     7   22.118754\n","     8   22.322222"],"text/html":["\n","  <div id=\"df-066f6cdd-6329-4f9c-bcc4-f69b1b39cf1c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>미세먼지(㎍/㎥)</th>\n","    </tr>\n","    <tr>\n","      <th>년</th>\n","      <th>월</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"12\" valign=\"top\">2016</th>\n","      <th>1</th>\n","      <td>52.693844</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>48.283273</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>66.799503</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>73.327039</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>58.624172</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>47.872304</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>35.531092</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>37.124378</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>40.013841</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>40.191363</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>54.729965</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>50.693522</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"12\" valign=\"top\">2017</th>\n","      <th>1</th>\n","      <td>55.719138</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>49.554029</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>64.532392</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>59.582549</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>66.029826</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>43.878112</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>36.667496</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>24.564570</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>36.624786</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>32.496689</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>45.322222</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>52.992327</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"12\" valign=\"top\">2018</th>\n","      <th>1</th>\n","      <td>53.998324</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>55.842459</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>43.815303</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>52.001222</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>40.376068</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>49.719231</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>26.415215</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>23.940299</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>21.652651</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>30.030576</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>53.707242</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>43.704176</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">2019</th>\n","      <th>8</th>\n","      <td>27.714286</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>22.069071</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>31.012975</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>40.752425</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>42.162968</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">2020</th>\n","      <th>1</th>\n","      <td>43.070856</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>41.949630</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>46.351002</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>45.610667</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>36.477082</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>38.060298</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>22.118754</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>22.322222</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-066f6cdd-6329-4f9c-bcc4-f69b1b39cf1c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-066f6cdd-6329-4f9c-bcc4-f69b1b39cf1c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-066f6cdd-6329-4f9c-bcc4-f69b1b39cf1c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-04698ec7-286b-48ed-89cd-a7ae05795087\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04698ec7-286b-48ed-89cd-a7ae05795087')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-04698ec7-286b-48ed-89cd-a7ae05795087 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"J-Y2ocLekJnz","colab":{"base_uri":"https://localhost:8080/","height":645},"executionInfo":{"status":"ok","timestamp":1696154027035,"user_tz":-540,"elapsed":370,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"34b98e64-9b95-417b-e312-7d5e32baa109"},"source":["# [3-35] meandf에서 2017년 6월까지의 데이터만 출력합니다.\n","meandf.loc[:(2017,6),:]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         미세먼지(㎍/㎥)\n","년    월            \n","2016 1   52.693844\n","     2   48.283273\n","     3   66.799503\n","     4   73.327039\n","     5   58.624172\n","     6   47.872304\n","     7   35.531092\n","     8   37.124378\n","     9   40.013841\n","     10  40.191363\n","     11  54.729965\n","     12  50.693522\n","2017 1   55.719138\n","     2   49.554029\n","     3   64.532392\n","     4   59.582549\n","     5   66.029826\n","     6   43.878112"],"text/html":["\n","  <div id=\"df-9ad07bd4-1fb4-449b-93c9-6d3a775e7c74\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>미세먼지(㎍/㎥)</th>\n","    </tr>\n","    <tr>\n","      <th>년</th>\n","      <th>월</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"12\" valign=\"top\">2016</th>\n","      <th>1</th>\n","      <td>52.693844</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>48.283273</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>66.799503</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>73.327039</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>58.624172</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>47.872304</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>35.531092</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>37.124378</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>40.013841</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>40.191363</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>54.729965</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>50.693522</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"6\" valign=\"top\">2017</th>\n","      <th>1</th>\n","      <td>55.719138</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>49.554029</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>64.532392</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>59.582549</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>66.029826</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>43.878112</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ad07bd4-1fb4-449b-93c9-6d3a775e7c74')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9ad07bd4-1fb4-449b-93c9-6d3a775e7c74 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9ad07bd4-1fb4-449b-93c9-6d3a775e7c74');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3e6ec02d-2141-4e45-a785-1435635119bc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3e6ec02d-2141-4e45-a785-1435635119bc')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3e6ec02d-2141-4e45-a785-1435635119bc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"7zXo36sTh0hI"},"source":["# [3-36] meandf에 '결측치제거후' 및 '차이'라는 컬럼을 추가합니다.\n","# '결측치제거후' 컬럼은 temp2에서 '년', '월'별 '미세먼지(㎍/㎥)' 데이터의 평균을 사용합니다.\n","# '차이' 컬럼은 '미세먼지(㎍/㎥)' - '결측치제거후' 를 사용합니다.\n","meandf['결측치제거후']=temp2.groupby(['년','월'])['미세먼지(㎍/㎥)'].mean()\n","meandf['차이']=meandf['미세먼지(㎍/㎥)'] - meandf['결측치제거후']\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hNp-CcDflJhc","colab":{"base_uri":"https://localhost:8080/","height":645},"executionInfo":{"status":"ok","timestamp":1694438504076,"user_tz":-540,"elapsed":5,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"1f6d1d1a-8c9b-4407-bd9a-be9192c90949"},"source":["# [3-37] meandf에서 2017년 6월까지의 데이터만 출력합니다.\n","# 여러 개의 값에 차이가 있는 것을 확인 할 수 있습니다.\n","meandf.loc[:(2017,6),:]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         미세먼지(㎍/㎥)     결측치제거후        차이\n","년    월                                 \n","2016 1   52.693844  52.693844  0.000000\n","     2   48.283273  48.283273  0.000000\n","     3   66.799503  66.799503  0.000000\n","     4   73.327039  73.327039  0.000000\n","     5   58.624172  58.571784  0.052388\n","     6   47.872304  47.872304  0.000000\n","     7   35.531092  35.417235  0.113857\n","     8   37.124378  37.147870 -0.023492\n","     9   40.013841  40.051304 -0.037464\n","     10  40.191363  40.128497  0.062867\n","     11  54.729965  53.557128  1.172837\n","     12  50.693522  50.028426  0.665095\n","2017 1   55.719138  55.638219  0.080919\n","     2   49.554029  49.554029  0.000000\n","     3   64.532392  64.580699 -0.048307\n","     4   59.582549  57.955078  1.627471\n","     5   66.029826  64.139216  1.890610\n","     6   43.878112  43.922865 -0.044753"],"text/html":["\n","  <div id=\"df-0bb88435-b113-4f85-9124-0d63562cd869\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>결측치제거후</th>\n","      <th>차이</th>\n","    </tr>\n","    <tr>\n","      <th>년</th>\n","      <th>월</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"12\" valign=\"top\">2016</th>\n","      <th>1</th>\n","      <td>52.693844</td>\n","      <td>52.693844</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>48.283273</td>\n","      <td>48.283273</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>66.799503</td>\n","      <td>66.799503</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>73.327039</td>\n","      <td>73.327039</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>58.624172</td>\n","      <td>58.571784</td>\n","      <td>0.052388</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>47.872304</td>\n","      <td>47.872304</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>35.531092</td>\n","      <td>35.417235</td>\n","      <td>0.113857</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>37.124378</td>\n","      <td>37.147870</td>\n","      <td>-0.023492</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>40.013841</td>\n","      <td>40.051304</td>\n","      <td>-0.037464</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>40.191363</td>\n","      <td>40.128497</td>\n","      <td>0.062867</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>54.729965</td>\n","      <td>53.557128</td>\n","      <td>1.172837</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>50.693522</td>\n","      <td>50.028426</td>\n","      <td>0.665095</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"6\" valign=\"top\">2017</th>\n","      <th>1</th>\n","      <td>55.719138</td>\n","      <td>55.638219</td>\n","      <td>0.080919</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>49.554029</td>\n","      <td>49.554029</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>64.532392</td>\n","      <td>64.580699</td>\n","      <td>-0.048307</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>59.582549</td>\n","      <td>57.955078</td>\n","      <td>1.627471</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>66.029826</td>\n","      <td>64.139216</td>\n","      <td>1.890610</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>43.878112</td>\n","      <td>43.922865</td>\n","      <td>-0.044753</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0bb88435-b113-4f85-9124-0d63562cd869')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0bb88435-b113-4f85-9124-0d63562cd869 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0bb88435-b113-4f85-9124-0d63562cd869');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-273cd7c9-665b-45c8-9a5d-ad9ca3f4b81a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-273cd7c9-665b-45c8-9a5d-ad9ca3f4b81a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-273cd7c9-665b-45c8-9a5d-ad9ca3f4b81a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","metadata":{"id":"DHr2i8N0pAhk"},"source":["temp2의 경우 NaN 데이터를 포함한 행 삭제시 평균 값이 달라진 것을 확인 할 수 있습니다.\n","삭제된 행 중, 미세먼지에 대한 값을 가진 것이 있기 때문입니다.\n","\"결측치 제거시에는 주의가 필요합니다.\""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zUu81TvMpZP6"},"source":["### 3-5.결측치 대체 (평균값)"]},{"cell_type":"markdown","metadata":{"id":"jLAOfR8upf9S"},"source":["Series.mask(조건, 조건이 참일 때 사용할 값 또는 값 목록)\n","- 조건이 True인 것에 대해 다른 값을 변경합니다.\n","- s.isna() : NA값에 대해 True, NA아닌 것은 False\n","\n","Series.where(조건, 조건이 거짓일 때 사용할 값 또는 값 목록)\n","- 조건이 False인 것에 대해서 다른 값으로 변경합니다.\n","- s.notna() : NA값에 대해 False, NA아닌 것은 True"]},{"cell_type":"code","metadata":{"id":"B_0qUz05yWyl","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1696154828806,"user_tz":-540,"elapsed":433,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"cd49954b-d6bc-4b20-c6ef-069d84efeec8"},"source":["# [3-38] where 연습을 위한 temp 생성\n","import numpy as np\n","temp = pd.DataFrame({'A':[np.nan, 2, np.nan, 4,np.nan],\n","                     'B':[7, 8, 9, 10, np.nan],\n","                     'C':[1, 2, 4, np.nan, 8]})\n","temp"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     A     B    C\n","0  NaN   7.0  1.0\n","1  2.0   8.0  2.0\n","2  NaN   9.0  4.0\n","3  4.0  10.0  NaN\n","4  NaN   NaN  8.0"],"text/html":["\n","  <div id=\"df-a0a30023-2e2f-492a-9e94-519acf89a3b0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NaN</td>\n","      <td>7.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.0</td>\n","      <td>8.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>9.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.0</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0a30023-2e2f-492a-9e94-519acf89a3b0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a0a30023-2e2f-492a-9e94-519acf89a3b0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a0a30023-2e2f-492a-9e94-519acf89a3b0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eeca79cc-0e1a-410b-a813-46b150e00f29\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eeca79cc-0e1a-410b-a813-46b150e00f29')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eeca79cc-0e1a-410b-a813-46b150e00f29 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","metadata":{"id":"7gRuYU1CBGfj","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1696155314958,"user_tz":-540,"elapsed":16,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"0c0115b5-bfc8-4be3-bef8-ba9fbf11386b"},"source":["# temp의 'A' 열에 대해서 결측치인 경우 'B'의 값으로 대체합니다.\n","temp['A']=temp['A'].mask(temp['A'].isna(),temp['B'].mean())\n","temp['B']=temp['B'].mask(temp['B'].isna(),temp['C'].mean())\n","temp\n","# temp['A'].where(temp['A'].notna(),temp['B']) #where은 조건이 거짓일 때이므로"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     A      B    C\n","0  7.0   7.00  1.0\n","1  2.0   8.00  2.0\n","2  9.0   9.00  4.0\n","3  4.0  10.00  NaN\n","4  8.5   3.75  8.0"],"text/html":["\n","  <div id=\"df-80cd348f-86f8-42a2-9bf3-8843dde6ebe1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>7.0</td>\n","      <td>7.00</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.0</td>\n","      <td>8.00</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9.0</td>\n","      <td>9.00</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.0</td>\n","      <td>10.00</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8.5</td>\n","      <td>3.75</td>\n","      <td>8.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80cd348f-86f8-42a2-9bf3-8843dde6ebe1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-80cd348f-86f8-42a2-9bf3-8843dde6ebe1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-80cd348f-86f8-42a2-9bf3-8843dde6ebe1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-97ab16cd-c378-4527-8357-811421dd4d78\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-97ab16cd-c378-4527-8357-811421dd4d78')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-97ab16cd-c378-4527-8357-811421dd4d78 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","metadata":{"id":"2pju3L-xAZKo","colab":{"base_uri":"https://localhost:8080/","height":212},"executionInfo":{"status":"error","timestamp":1696149266662,"user_tz":-540,"elapsed":15,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"429fe166-e8fc-495d-f28e-b92adca863ee"},"source":["# temp의 'A' 열에 대해서 결측치인 경우 'C'의 값으로 대체합니다.\n","temp['A'].mask(temp['A'].isna(),temp['C'])\n","temp"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-e8061f7cd0c2>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# temp의 'A' 열에 대해서 결측치인 경우 'C'의 값으로 대체합니다.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mtemp\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'A'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtemp\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'A'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mtemp\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'C'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mtemp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'temp' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"bRe5pYtr0O0V"},"source":["df.groupby(그룹기준컬럼)[함수를 적용할 컬럼명].transform(함수)\n","- index가 유지 되면서 그룹별 함수를 적용함\n","- agg는 index가 그룹기준컬럼으로 변경됨"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yuTXAKJhR3rA","executionInfo":{"status":"ok","timestamp":1694439772769,"user_tz":-540,"elapsed":249,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"0276221e-cca1-4bfb-d1f3-4b1cace52062"},"source":["# [앗! 살펴 보세요 ^^]\n","df_dust.groupby(['측정일시'])['미세먼지(㎍/㎥)'].mean()  # <- 동일한 값을 갖음.  MultiIndex 아님\n","df_dust.groupby('측정일시')['미세먼지(㎍/㎥)'].agg('mean')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["측정일시\n","20160101    70.736842\n","20160102    53.789474\n","20160103    98.861111\n","20160104    76.205128\n","20160105    34.333333\n","              ...    \n","20200814    31.660000\n","20200815    37.400000\n","20200816    22.380000\n","20200817    24.980000\n","20200818    27.080000\n","Name: 미세먼지(㎍/㎥), Length: 1403, dtype: float64"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","metadata":{"id":"bOl8sKzEwcR8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694439859480,"user_tz":-540,"elapsed":7,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"aa06cacc-185c-4347-bbb5-84990f5d2bf9"},"source":["# [3-39] df_dust의 일자(년, 월, 일)별 '미세먼지(㎍/㎥)'의 평균을 구합니다.\n","# 이때, index 변경을 하지 않기 위해 transform을 사용하고, fine_dust라는 이름을 지정합니다.\n","fine_dust=df_dust.groupby('측정일시')['미세먼지(㎍/㎥)'].transform('mean')\n","fine_dust #측정일시별 평균값으로 각 행대체"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        70.736842\n","1        70.736842\n","2        70.736842\n","3        70.736842\n","4        70.736842\n","           ...    \n","60203    27.080000\n","60204    27.080000\n","60205    27.080000\n","60206    27.080000\n","60207    27.080000\n","Name: 미세먼지(㎍/㎥), Length: 60208, dtype: float64"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","metadata":{"id":"STWM8k3kzin_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694439891349,"user_tz":-540,"elapsed":3,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"eee13da7-12a8-4a53-8262-984449158425"},"source":["# [3-40] df_dust['미세먼지(㎍/㎥)'], fine_dust의 결측치 값의 개수를 구합니다.\n","df_dust['미세먼지(㎍/㎥)'].isna().sum(),fine_dust.isna().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(881, 0)"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","metadata":{"id":"zFobgJbXx6Tv"},"source":["# [3-41] df_dust의 '미세먼지(㎍/㎥)'의 결측치를 fine_dust의 값으로 채우기 합니다.\n","# 채우기 한 결과를 다시 df_dust['미세먼지(㎍/㎥)']로 저장합니다.\n","s= df_dust['미세먼지(㎍/㎥)']\n","s=s.mask(s.isna(),fine_dust)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"W7n605TQzus1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694440316458,"user_tz":-540,"elapsed":5,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"613c55d7-34d2-4480-8b3d-c855de03665a"},"source":["# [3-42] df_dust의 컬럼별 결측치 개수를 확인하여 봅니다.\n","# 미세먼지에 대한 결측치가 제거 되었습니다.\n","df_dust.isna().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["측정일시             0\n","측정소명             0\n","년                0\n","월                0\n","일                0\n","오존농도(ppm)     2133\n","미세먼지(㎍/㎥)        0\n","초미세먼지(㎍/㎥)    1779\n","dtype: int64"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","metadata":{"id":"mxMz7EvV4Fy5"},"source":["# [3-43] meandf에 '결측치대체' 및 '차이2'라는 컬럼을 추가합니다.\n","# '결측치대체' 컬럼은 df_dust에서 '년', '월'별 '미세먼지(㎍/㎥)' 데이터의 평균을 사용합니다.\n","# '차이2' 컬럼은 '미세먼지(㎍/㎥)' - '결측치대체'를 사용합니다.\n","meandf['결측치대체'] = df_dust.groupby(['년','월'])['미세먼지(㎍/㎥)'].mean()\n","meandf['차이2']=meandf['미세먼지(㎍/㎥)'] - meandf['결측치대체']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"t03rSeti588D","colab":{"base_uri":"https://localhost:8080/","height":645},"executionInfo":{"status":"ok","timestamp":1694440479301,"user_tz":-540,"elapsed":296,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"5fc092b8-df25-4808-9f04-0bbbcf0d096b"},"source":["# [3-44] meandf에서 2017년 6월까지의 데이터만 출력합니다.\n","# 차이가 없는 것을 확인합니다.\n","meandf.loc[:(2017,6)]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         미세먼지(㎍/㎥)     결측치제거후        차이      결측치대체       차이2\n","년    월                                                      \n","2016 1   52.693844  52.693844  0.000000  52.752104 -0.058261\n","     2   48.283273  48.283273  0.000000  48.293733 -0.010460\n","     3   66.799503  66.799503  0.000000  66.850594 -0.051091\n","     4   73.327039  73.327039  0.000000  73.478543 -0.151504\n","     5   58.624172  58.571784  0.052388  58.610857  0.013315\n","     6   47.872304  47.872304  0.000000  47.777946  0.094358\n","     7   35.531092  35.417235  0.113857  35.423542  0.107550\n","     8   37.124378  37.147870 -0.023492  37.107287  0.017091\n","     9   40.013841  40.051304 -0.037464  40.036313 -0.022472\n","     10  40.191363  40.128497  0.062867  40.244174 -0.052811\n","     11  54.729965  53.557128  1.172837  54.780218 -0.050252\n","     12  50.693522  50.028426  0.665095  50.714662 -0.021140\n","2017 1   55.719138  55.638219  0.080919  55.730312 -0.011174\n","     2   49.554029  49.554029  0.000000  49.554029  0.000000\n","     3   64.532392  64.580699 -0.048307  64.535588 -0.003196\n","     4   59.582549  57.955078  1.627471  59.576136  0.006413\n","     5   66.029826  64.139216  1.890610  66.012864  0.016962\n","     6   43.878112  43.922865 -0.044753  43.886280 -0.008168"],"text/html":["\n","  <div id=\"df-c9e82ef0-40d2-4331-bd9e-a069ce9c9499\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>결측치제거후</th>\n","      <th>차이</th>\n","      <th>결측치대체</th>\n","      <th>차이2</th>\n","    </tr>\n","    <tr>\n","      <th>년</th>\n","      <th>월</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"12\" valign=\"top\">2016</th>\n","      <th>1</th>\n","      <td>52.693844</td>\n","      <td>52.693844</td>\n","      <td>0.000000</td>\n","      <td>52.752104</td>\n","      <td>-0.058261</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>48.283273</td>\n","      <td>48.283273</td>\n","      <td>0.000000</td>\n","      <td>48.293733</td>\n","      <td>-0.010460</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>66.799503</td>\n","      <td>66.799503</td>\n","      <td>0.000000</td>\n","      <td>66.850594</td>\n","      <td>-0.051091</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>73.327039</td>\n","      <td>73.327039</td>\n","      <td>0.000000</td>\n","      <td>73.478543</td>\n","      <td>-0.151504</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>58.624172</td>\n","      <td>58.571784</td>\n","      <td>0.052388</td>\n","      <td>58.610857</td>\n","      <td>0.013315</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>47.872304</td>\n","      <td>47.872304</td>\n","      <td>0.000000</td>\n","      <td>47.777946</td>\n","      <td>0.094358</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>35.531092</td>\n","      <td>35.417235</td>\n","      <td>0.113857</td>\n","      <td>35.423542</td>\n","      <td>0.107550</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>37.124378</td>\n","      <td>37.147870</td>\n","      <td>-0.023492</td>\n","      <td>37.107287</td>\n","      <td>0.017091</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>40.013841</td>\n","      <td>40.051304</td>\n","      <td>-0.037464</td>\n","      <td>40.036313</td>\n","      <td>-0.022472</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>40.191363</td>\n","      <td>40.128497</td>\n","      <td>0.062867</td>\n","      <td>40.244174</td>\n","      <td>-0.052811</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>54.729965</td>\n","      <td>53.557128</td>\n","      <td>1.172837</td>\n","      <td>54.780218</td>\n","      <td>-0.050252</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>50.693522</td>\n","      <td>50.028426</td>\n","      <td>0.665095</td>\n","      <td>50.714662</td>\n","      <td>-0.021140</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"6\" valign=\"top\">2017</th>\n","      <th>1</th>\n","      <td>55.719138</td>\n","      <td>55.638219</td>\n","      <td>0.080919</td>\n","      <td>55.730312</td>\n","      <td>-0.011174</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>49.554029</td>\n","      <td>49.554029</td>\n","      <td>0.000000</td>\n","      <td>49.554029</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>64.532392</td>\n","      <td>64.580699</td>\n","      <td>-0.048307</td>\n","      <td>64.535588</td>\n","      <td>-0.003196</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>59.582549</td>\n","      <td>57.955078</td>\n","      <td>1.627471</td>\n","      <td>59.576136</td>\n","      <td>0.006413</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>66.029826</td>\n","      <td>64.139216</td>\n","      <td>1.890610</td>\n","      <td>66.012864</td>\n","      <td>0.016962</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>43.878112</td>\n","      <td>43.922865</td>\n","      <td>-0.044753</td>\n","      <td>43.886280</td>\n","      <td>-0.008168</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9e82ef0-40d2-4331-bd9e-a069ce9c9499')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c9e82ef0-40d2-4331-bd9e-a069ce9c9499 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c9e82ef0-40d2-4331-bd9e-a069ce9c9499');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-270095a1-808a-40f0-9afb-04f1e5a88b6b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-270095a1-808a-40f0-9afb-04f1e5a88b6b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-270095a1-808a-40f0-9afb-04f1e5a88b6b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["meandf['차이'].abs().sum(),meandf['차이2'].abs().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZJMzl5XoiTCu","executionInfo":{"status":"ok","timestamp":1694440730030,"user_tz":-540,"elapsed":3,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"faea128f-6e1e-41d8-fb34-a70a5a8179c6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(7.062269281823493, 2.76528301020522)"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","metadata":{"id":"B14wjpS9z2Oc"},"source":["# [3-45] df_dust의 '오존농도(ppm)', '초미세먼지(㎍/㎥)' 컬럼에 대해서도\n","# '미세먼지(㎍/㎥)'와 같이 동일한 '년', '월', '일'의 평균 값으로 채우기 합니다.\n","for t in ['오존농도(ppm)','초미세먼지(㎍/㎥)']:\n","  x= df_dust.groupby('측정일시')[t].transform('mean')\n","  s= df_dust[t]\n","  df_dust[t]=s.mask(s.isna(),x)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"x_EUIqZC0dFM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694441436970,"user_tz":-540,"elapsed":270,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"610e445e-9163-4399-87b0-734efff7ef76"},"source":["# [3-46] df_dust의 컬럼별 결측치 개수를 확인합니다.\n","df_dust.isna().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["측정일시          0\n","측정소명          0\n","년             0\n","월             0\n","일             0\n","오존농도(ppm)     0\n","미세먼지(㎍/㎥)     0\n","초미세먼지(㎍/㎥)    0\n","dtype: int64"]},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["df_dust.groupby(['년','월']).mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"889HTRLxkubx","executionInfo":{"status":"ok","timestamp":1694441972177,"user_tz":-540,"elapsed":686,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"b3b45f1a-37a7-46a9-d753-028420648bf8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-89-a1dcbd3d4250>:1: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  df_dust.groupby(['년','월']).mean()\n"]},{"output_type":"execute_result","data":{"text/plain":["                 측정일시          일  오존농도(ppm)  미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)\n","년    월                                                            \n","2016 1   2.016012e+07  16.034826   0.012451  52.752104   27.632801\n","     2   2.016022e+07  15.000886   0.016101  48.293733   23.690619\n","     3   2.016032e+07  16.000000   0.021726  66.850594   31.931501\n","     4   2.016042e+07  15.500000   0.026818  73.478543   30.308884\n","     5   2.016052e+07  16.000000   0.033626  58.610857   29.329285\n","     6   2.016062e+07  15.500000   0.031851  47.777946   28.464440\n","     7   2.016072e+07  16.000000   0.023083  35.423542   22.345790\n","     8   2.016082e+07  16.000000   0.025810  37.107287   22.762359\n","     9   2.016092e+07  15.500000   0.023212  40.036313   24.425479\n","     10  2.016102e+07  16.000000   0.015515  40.244174   20.804771\n","     11  2.016112e+07  15.500000   0.012184  54.780218   28.691756\n","     12  2.016122e+07  16.000000   0.008479  50.714662   30.448776\n","2017 1   2.017012e+07  16.000000   0.012705  55.730312   34.016879\n","     2   2.017021e+07  14.500000   0.016215  49.554029   30.473443\n","     3   2.017032e+07  16.000000   0.021979  64.535588   41.646816\n","     4   2.017042e+07  15.500000   0.030514  59.576136   27.832616\n","     5   2.017052e+07  16.000000   0.034281  66.012864   25.652920\n","     6   2.017062e+07  15.500000   0.035657  43.886280   23.385711\n","     7   2.017072e+07  16.000000   0.025766  36.665470   23.364764\n","     8   2.017082e+07  16.000000   0.021280  24.567933   13.592269\n","     9   2.017092e+07  15.500000   0.023605  36.624786   19.725641\n","     10  2.017102e+07  16.000000   0.017529  32.492686   15.770058\n","     11  2.017112e+07  15.500000   0.012297  45.322222   22.496626\n","     12  2.017122e+07  16.000000   0.009632  53.380664   31.050865\n","2018 1   2.018012e+07  16.000000   0.012264  53.875143   30.514545\n","     2   2.018021e+07  14.407407   0.015682  56.070286   30.980797\n","     3   2.018031e+07  10.500000   0.020911  43.904791   26.336623\n","     4   2.018042e+07  19.476190   0.027948  51.983516   27.531425\n","     5   2.018051e+07  11.857143   0.030198  40.376068   24.119658\n","     6   2.018061e+07  12.857143   0.029088  50.021153   33.083935\n","     7   2.018072e+07  16.793103   0.022736  26.125661   16.590896\n","     8   2.018082e+07  16.000000   0.027303  23.975534   14.264725\n","     9   2.018092e+07  15.500000   0.024162  21.629749   10.372630\n","     10  2.018102e+07  16.000000   0.016250  29.941261   15.809619\n","     11  2.018112e+07  15.610823   0.010682  53.696725   29.430837\n","     12  2.018122e+07  16.000000   0.011235  43.638476   23.928084\n","2019 8   2.019082e+07  24.471014   0.033298  27.677424   17.016035\n","     9   2.019092e+07  16.142444   0.021417  22.092223   11.752238\n","     10  2.019102e+07  18.029765   0.019475  30.862739   16.964261\n","     11  2.019111e+07  13.239380   0.013475  40.723439   22.197955\n","     12  2.019122e+07  15.790451   0.010880  42.158352   27.819270\n","2020 1   2.020012e+07  16.219816   0.013456  43.184557   28.139324\n","     2   2.020021e+07  14.444444   0.016541  41.949630   28.237037\n","     3   2.020032e+07  16.000000   0.026087  46.350072   24.825359\n","     4   2.020042e+07  15.500000   0.035207  45.610667   20.438000\n","     5   2.020052e+07  16.000000   0.032977  36.469638   18.947610\n","     6   2.020062e+07  15.500000   0.041505  38.042096   20.771592\n","     7   2.020072e+07  16.000000   0.028781  22.132614   13.542554\n","     8   2.020081e+07   9.500000   0.016771  22.322222   13.143333"],"text/html":["\n","  <div id=\"df-c5118aac-9901-45a1-b95c-2dcd88a6298d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>일</th>\n","      <th>오존농도(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","    <tr>\n","      <th>년</th>\n","      <th>월</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"12\" valign=\"top\">2016</th>\n","      <th>1</th>\n","      <td>2.016012e+07</td>\n","      <td>16.034826</td>\n","      <td>0.012451</td>\n","      <td>52.752104</td>\n","      <td>27.632801</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2.016022e+07</td>\n","      <td>15.000886</td>\n","      <td>0.016101</td>\n","      <td>48.293733</td>\n","      <td>23.690619</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.016032e+07</td>\n","      <td>16.000000</td>\n","      <td>0.021726</td>\n","      <td>66.850594</td>\n","      <td>31.931501</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.016042e+07</td>\n","      <td>15.500000</td>\n","      <td>0.026818</td>\n","      <td>73.478543</td>\n","      <td>30.308884</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2.016052e+07</td>\n","      <td>16.000000</td>\n","      <td>0.033626</td>\n","      <td>58.610857</td>\n","      <td>29.329285</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2.016062e+07</td>\n","      <td>15.500000</td>\n","      <td>0.031851</td>\n","      <td>47.777946</td>\n","      <td>28.464440</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2.016072e+07</td>\n","      <td>16.000000</td>\n","      <td>0.023083</td>\n","      <td>35.423542</td>\n","      <td>22.345790</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2.016082e+07</td>\n","      <td>16.000000</td>\n","      <td>0.025810</td>\n","      <td>37.107287</td>\n","      <td>22.762359</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.016092e+07</td>\n","      <td>15.500000</td>\n","      <td>0.023212</td>\n","      <td>40.036313</td>\n","      <td>24.425479</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2.016102e+07</td>\n","      <td>16.000000</td>\n","      <td>0.015515</td>\n","      <td>40.244174</td>\n","      <td>20.804771</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2.016112e+07</td>\n","      <td>15.500000</td>\n","      <td>0.012184</td>\n","      <td>54.780218</td>\n","      <td>28.691756</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2.016122e+07</td>\n","      <td>16.000000</td>\n","      <td>0.008479</td>\n","      <td>50.714662</td>\n","      <td>30.448776</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"12\" valign=\"top\">2017</th>\n","      <th>1</th>\n","      <td>2.017012e+07</td>\n","      <td>16.000000</td>\n","      <td>0.012705</td>\n","      <td>55.730312</td>\n","      <td>34.016879</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2.017021e+07</td>\n","      <td>14.500000</td>\n","      <td>0.016215</td>\n","      <td>49.554029</td>\n","      <td>30.473443</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.017032e+07</td>\n","      <td>16.000000</td>\n","      <td>0.021979</td>\n","      <td>64.535588</td>\n","      <td>41.646816</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.017042e+07</td>\n","      <td>15.500000</td>\n","      <td>0.030514</td>\n","      <td>59.576136</td>\n","      <td>27.832616</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2.017052e+07</td>\n","      <td>16.000000</td>\n","      <td>0.034281</td>\n","      <td>66.012864</td>\n","      <td>25.652920</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2.017062e+07</td>\n","      <td>15.500000</td>\n","      <td>0.035657</td>\n","      <td>43.886280</td>\n","      <td>23.385711</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2.017072e+07</td>\n","      <td>16.000000</td>\n","      <td>0.025766</td>\n","      <td>36.665470</td>\n","      <td>23.364764</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2.017082e+07</td>\n","      <td>16.000000</td>\n","      <td>0.021280</td>\n","      <td>24.567933</td>\n","      <td>13.592269</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.017092e+07</td>\n","      <td>15.500000</td>\n","      <td>0.023605</td>\n","      <td>36.624786</td>\n","      <td>19.725641</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2.017102e+07</td>\n","      <td>16.000000</td>\n","      <td>0.017529</td>\n","      <td>32.492686</td>\n","      <td>15.770058</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2.017112e+07</td>\n","      <td>15.500000</td>\n","      <td>0.012297</td>\n","      <td>45.322222</td>\n","      <td>22.496626</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2.017122e+07</td>\n","      <td>16.000000</td>\n","      <td>0.009632</td>\n","      <td>53.380664</td>\n","      <td>31.050865</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"12\" valign=\"top\">2018</th>\n","      <th>1</th>\n","      <td>2.018012e+07</td>\n","      <td>16.000000</td>\n","      <td>0.012264</td>\n","      <td>53.875143</td>\n","      <td>30.514545</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2.018021e+07</td>\n","      <td>14.407407</td>\n","      <td>0.015682</td>\n","      <td>56.070286</td>\n","      <td>30.980797</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.018031e+07</td>\n","      <td>10.500000</td>\n","      <td>0.020911</td>\n","      <td>43.904791</td>\n","      <td>26.336623</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.018042e+07</td>\n","      <td>19.476190</td>\n","      <td>0.027948</td>\n","      <td>51.983516</td>\n","      <td>27.531425</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2.018051e+07</td>\n","      <td>11.857143</td>\n","      <td>0.030198</td>\n","      <td>40.376068</td>\n","      <td>24.119658</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2.018061e+07</td>\n","      <td>12.857143</td>\n","      <td>0.029088</td>\n","      <td>50.021153</td>\n","      <td>33.083935</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2.018072e+07</td>\n","      <td>16.793103</td>\n","      <td>0.022736</td>\n","      <td>26.125661</td>\n","      <td>16.590896</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2.018082e+07</td>\n","      <td>16.000000</td>\n","      <td>0.027303</td>\n","      <td>23.975534</td>\n","      <td>14.264725</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.018092e+07</td>\n","      <td>15.500000</td>\n","      <td>0.024162</td>\n","      <td>21.629749</td>\n","      <td>10.372630</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2.018102e+07</td>\n","      <td>16.000000</td>\n","      <td>0.016250</td>\n","      <td>29.941261</td>\n","      <td>15.809619</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2.018112e+07</td>\n","      <td>15.610823</td>\n","      <td>0.010682</td>\n","      <td>53.696725</td>\n","      <td>29.430837</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2.018122e+07</td>\n","      <td>16.000000</td>\n","      <td>0.011235</td>\n","      <td>43.638476</td>\n","      <td>23.928084</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">2019</th>\n","      <th>8</th>\n","      <td>2.019082e+07</td>\n","      <td>24.471014</td>\n","      <td>0.033298</td>\n","      <td>27.677424</td>\n","      <td>17.016035</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.019092e+07</td>\n","      <td>16.142444</td>\n","      <td>0.021417</td>\n","      <td>22.092223</td>\n","      <td>11.752238</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2.019102e+07</td>\n","      <td>18.029765</td>\n","      <td>0.019475</td>\n","      <td>30.862739</td>\n","      <td>16.964261</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2.019111e+07</td>\n","      <td>13.239380</td>\n","      <td>0.013475</td>\n","      <td>40.723439</td>\n","      <td>22.197955</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2.019122e+07</td>\n","      <td>15.790451</td>\n","      <td>0.010880</td>\n","      <td>42.158352</td>\n","      <td>27.819270</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">2020</th>\n","      <th>1</th>\n","      <td>2.020012e+07</td>\n","      <td>16.219816</td>\n","      <td>0.013456</td>\n","      <td>43.184557</td>\n","      <td>28.139324</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2.020021e+07</td>\n","      <td>14.444444</td>\n","      <td>0.016541</td>\n","      <td>41.949630</td>\n","      <td>28.237037</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.020032e+07</td>\n","      <td>16.000000</td>\n","      <td>0.026087</td>\n","      <td>46.350072</td>\n","      <td>24.825359</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.020042e+07</td>\n","      <td>15.500000</td>\n","      <td>0.035207</td>\n","      <td>45.610667</td>\n","      <td>20.438000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2.020052e+07</td>\n","      <td>16.000000</td>\n","      <td>0.032977</td>\n","      <td>36.469638</td>\n","      <td>18.947610</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2.020062e+07</td>\n","      <td>15.500000</td>\n","      <td>0.041505</td>\n","      <td>38.042096</td>\n","      <td>20.771592</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2.020072e+07</td>\n","      <td>16.000000</td>\n","      <td>0.028781</td>\n","      <td>22.132614</td>\n","      <td>13.542554</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2.020081e+07</td>\n","      <td>9.500000</td>\n","      <td>0.016771</td>\n","      <td>22.322222</td>\n","      <td>13.143333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5118aac-9901-45a1-b95c-2dcd88a6298d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c5118aac-9901-45a1-b95c-2dcd88a6298d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c5118aac-9901-45a1-b95c-2dcd88a6298d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0bdbf91f-905e-4f4e-9e07-d4f7705ea275\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0bdbf91f-905e-4f4e-9e07-d4f7705ea275')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0bdbf91f-905e-4f4e-9e07-d4f7705ea275 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","metadata":{"id":"BsVAn4o4Cqzw"},"source":["# 필요시 저장하였다가 가져와 사용하면 됩니다 ^^!\n","df_dust.to_csv('fine_dust02.csv', index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_cjCpYLZk_cx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694441179876,"user_tz":-540,"elapsed":283,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"59e192ca-c84e-488c-ee0e-9c775bb1d946"},"source":["df_dust2 = pd.read_csv('fine_dust02.csv')\n","df_dust2.isna().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["측정일시          0\n","측정소명          0\n","년             0\n","월             0\n","일             0\n","오존농도(ppm)     0\n","미세먼지(㎍/㎥)     0\n","초미세먼지(㎍/㎥)    0\n","dtype: int64"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","metadata":{"id":"TftDH7dsk3w5"},"source":["import shelve\n","with shelve.open('mydata') as data:\n","    data['fine_dust02'] = df_dust"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gwF_Q5O0k8gA"},"source":["import shelve\n","with shelve.open('mydata') as data:\n","    df_dust3 = data['fine_dust02']"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_dust3.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ShUj3T3KkbMf","executionInfo":{"status":"ok","timestamp":1694441260516,"user_tz":-540,"elapsed":19,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"09858627-9281-46b1-b693-fd79a3a5e225"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       측정일시 측정소명     년  월  일  오존농도(ppm)  미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)\n","0  20160101  강남구  2016  1  1      0.006       73.0        44.0\n","1  20160101  성북구  2016  1  1      0.005       71.0        45.0\n","2  20160101  송파구  2016  1  1      0.004       64.0        39.0\n","3  20160101  신촌로  2016  1  1      0.004       87.0        40.0\n","4  20160101  양천구  2016  1  1      0.008       82.0        65.0"],"text/html":["\n","  <div id=\"df-db1bb291-5ab9-49ab-a201-5d79a3178ba1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>년</th>\n","      <th>월</th>\n","      <th>일</th>\n","      <th>오존농도(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20160101</td>\n","      <td>강남구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.006</td>\n","      <td>73.0</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20160101</td>\n","      <td>성북구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.005</td>\n","      <td>71.0</td>\n","      <td>45.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20160101</td>\n","      <td>송파구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.004</td>\n","      <td>64.0</td>\n","      <td>39.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20160101</td>\n","      <td>신촌로</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.004</td>\n","      <td>87.0</td>\n","      <td>40.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20160101</td>\n","      <td>양천구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.008</td>\n","      <td>82.0</td>\n","      <td>65.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db1bb291-5ab9-49ab-a201-5d79a3178ba1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-db1bb291-5ab9-49ab-a201-5d79a3178ba1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-db1bb291-5ab9-49ab-a201-5d79a3178ba1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9391a713-9b73-4bc2-8617-1d93d91ebe4a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9391a713-9b73-4bc2-8617-1d93d91ebe4a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9391a713-9b73-4bc2-8617-1d93d91ebe4a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":83}]},{"cell_type":"markdown","metadata":{"id":"CmDJne4y0kwr"},"source":["### 3-6. 미세먼지 분석"]},{"cell_type":"code","metadata":{"id":"_Ujsl7UZZUmF"},"source":["# 데이터 값 실수. 소수점 넷째자리까지 표시\n","pd.options.display.float_format = '{:.2f}'.format"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"RkDaZnXJ9zLg","executionInfo":{"status":"ok","timestamp":1694442107072,"user_tz":-540,"elapsed":19,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"60eddc6f-98f5-4020-d340-aca3f516e344"},"source":["# [3-47] df_dust의 첫 2개 행을 출력합니다.\n","df_dust.head(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       측정일시 측정소명     년  월  일  오존농도(ppm)  미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)\n","0  20160101  강남구  2016  1  1       0.01      73.00       44.00\n","1  20160101  성북구  2016  1  1       0.01      71.00       45.00"],"text/html":["\n","  <div id=\"df-1b02d3dc-1011-43ee-bf15-1a7e9faf36e2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>년</th>\n","      <th>월</th>\n","      <th>일</th>\n","      <th>오존농도(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20160101</td>\n","      <td>강남구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>73.00</td>\n","      <td>44.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20160101</td>\n","      <td>성북구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>71.00</td>\n","      <td>45.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b02d3dc-1011-43ee-bf15-1a7e9faf36e2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1b02d3dc-1011-43ee-bf15-1a7e9faf36e2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1b02d3dc-1011-43ee-bf15-1a7e9faf36e2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3965f52a-08ec-4484-bab8-8a49a9f3a55b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3965f52a-08ec-4484-bab8-8a49a9f3a55b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3965f52a-08ec-4484-bab8-8a49a9f3a55b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":91}]},{"cell_type":"markdown","metadata":{"id":"jMdl0wvmiEED"},"source":["행, 열에 모두 group을 지정하여 통계값 구하기\n","- DataFrame.pivot_table(index=행방향그룹열이름, columns=열방향그룹열이름, values=집계대상열이름, aggfunc=구할 통계값)\n","- 각각에 대해 단독 또는 목록을 사용할 수 있음\n","- index, columns는 범주형, values는 연속형 사용\n","- values, aggfunc의 경우 단독의 경우 출력에 표시되지 않으나, 목록은 표시됨"]},{"cell_type":"code","metadata":{"id":"U87Ata34YaNT","colab":{"base_uri":"https://localhost:8080/","height":488},"executionInfo":{"status":"ok","timestamp":1694442378545,"user_tz":-540,"elapsed":297,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"63620cc8-5af2-4adb-c553-4b959bbf06ac"},"source":["# [3-48] df_dust의 월/년 별 미세먼지의 'mean', 'min', 'max' 구하기\n","# pivot_table 사용, values의 경우 목록으로 지정시와 단독 지정시가 다르게 표시됨\n","df_dust.pivot_table(index='월',columns='년',values='미세먼지(㎍/㎥)',aggfunc=['mean','min','max'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    mean                           min                            max         \\\n","년   2016  2017  2018  2019  2020  2016  2017  2018  2019  2020   2016   2017   \n","월                                                                              \n","1  52.75 55.73 53.88   NaN 43.18 22.00 14.00 15.00   NaN  3.00 127.00 151.00   \n","2  48.29 49.55 56.07   NaN 41.95  9.00 23.00 22.00   NaN  7.00 124.00 135.00   \n","3  66.85 64.54 43.90   NaN 46.35 18.00 19.00  6.00   NaN 18.00 166.00 149.00   \n","4  73.48 59.58 51.98   NaN 45.61 21.00 14.00  5.00   NaN 11.00 270.00 134.00   \n","5  58.61 66.01 40.38   NaN 36.47 14.00 15.00  4.00   NaN  5.00 153.00 243.00   \n","6  47.78 43.89 50.02   NaN 38.04 15.00 11.00 30.00   NaN  4.00 122.00  85.00   \n","7  35.42 36.67 26.13   NaN 22.13  3.00  8.00  3.00   NaN  3.00  85.00  85.00   \n","8  37.11 24.57 23.98 27.68 22.32  4.00  5.00  4.00 11.00  3.00 122.00  76.00   \n","9  40.04 36.62 21.63 22.09   NaN  7.00  6.00  4.00  3.00   NaN 104.00  94.00   \n","10 40.24 32.49 29.94 30.86   NaN  5.00  5.00  3.00  3.00   NaN 117.00  97.00   \n","11 54.78 45.32 53.70 40.72   NaN 12.00 12.00  4.00  3.00   NaN 139.00 108.00   \n","12 50.71 53.38 43.64 42.16   NaN 19.00 14.00 14.00 13.00   NaN 117.00 165.00   \n","\n","                         \n","년    2018   2019   2020  \n","월                        \n","1  154.00    NaN  90.00  \n","2  127.00    NaN 103.00  \n","3  141.00    NaN 142.00  \n","4  117.00    NaN 126.00  \n","5  105.00    NaN 167.00  \n","6   85.00    NaN  79.00  \n","7   73.00    NaN 167.00  \n","8   59.00 130.00  58.00  \n","9   83.00  77.00    NaN  \n","10  90.00 179.00    NaN  \n","11 199.00 297.00    NaN  \n","12 114.00 142.00    NaN  "],"text/html":["\n","  <div id=\"df-a17effc5-ff80-4ee9-8cb6-ba522e23d941\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th colspan=\"5\" halign=\"left\">mean</th>\n","      <th colspan=\"5\" halign=\"left\">min</th>\n","      <th colspan=\"5\" halign=\"left\">max</th>\n","    </tr>\n","    <tr>\n","      <th>년</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","    </tr>\n","    <tr>\n","      <th>월</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>52.75</td>\n","      <td>55.73</td>\n","      <td>53.88</td>\n","      <td>NaN</td>\n","      <td>43.18</td>\n","      <td>22.00</td>\n","      <td>14.00</td>\n","      <td>15.00</td>\n","      <td>NaN</td>\n","      <td>3.00</td>\n","      <td>127.00</td>\n","      <td>151.00</td>\n","      <td>154.00</td>\n","      <td>NaN</td>\n","      <td>90.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>48.29</td>\n","      <td>49.55</td>\n","      <td>56.07</td>\n","      <td>NaN</td>\n","      <td>41.95</td>\n","      <td>9.00</td>\n","      <td>23.00</td>\n","      <td>22.00</td>\n","      <td>NaN</td>\n","      <td>7.00</td>\n","      <td>124.00</td>\n","      <td>135.00</td>\n","      <td>127.00</td>\n","      <td>NaN</td>\n","      <td>103.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>66.85</td>\n","      <td>64.54</td>\n","      <td>43.90</td>\n","      <td>NaN</td>\n","      <td>46.35</td>\n","      <td>18.00</td>\n","      <td>19.00</td>\n","      <td>6.00</td>\n","      <td>NaN</td>\n","      <td>18.00</td>\n","      <td>166.00</td>\n","      <td>149.00</td>\n","      <td>141.00</td>\n","      <td>NaN</td>\n","      <td>142.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>73.48</td>\n","      <td>59.58</td>\n","      <td>51.98</td>\n","      <td>NaN</td>\n","      <td>45.61</td>\n","      <td>21.00</td>\n","      <td>14.00</td>\n","      <td>5.00</td>\n","      <td>NaN</td>\n","      <td>11.00</td>\n","      <td>270.00</td>\n","      <td>134.00</td>\n","      <td>117.00</td>\n","      <td>NaN</td>\n","      <td>126.00</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>58.61</td>\n","      <td>66.01</td>\n","      <td>40.38</td>\n","      <td>NaN</td>\n","      <td>36.47</td>\n","      <td>14.00</td>\n","      <td>15.00</td>\n","      <td>4.00</td>\n","      <td>NaN</td>\n","      <td>5.00</td>\n","      <td>153.00</td>\n","      <td>243.00</td>\n","      <td>105.00</td>\n","      <td>NaN</td>\n","      <td>167.00</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>47.78</td>\n","      <td>43.89</td>\n","      <td>50.02</td>\n","      <td>NaN</td>\n","      <td>38.04</td>\n","      <td>15.00</td>\n","      <td>11.00</td>\n","      <td>30.00</td>\n","      <td>NaN</td>\n","      <td>4.00</td>\n","      <td>122.00</td>\n","      <td>85.00</td>\n","      <td>85.00</td>\n","      <td>NaN</td>\n","      <td>79.00</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>35.42</td>\n","      <td>36.67</td>\n","      <td>26.13</td>\n","      <td>NaN</td>\n","      <td>22.13</td>\n","      <td>3.00</td>\n","      <td>8.00</td>\n","      <td>3.00</td>\n","      <td>NaN</td>\n","      <td>3.00</td>\n","      <td>85.00</td>\n","      <td>85.00</td>\n","      <td>73.00</td>\n","      <td>NaN</td>\n","      <td>167.00</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>37.11</td>\n","      <td>24.57</td>\n","      <td>23.98</td>\n","      <td>27.68</td>\n","      <td>22.32</td>\n","      <td>4.00</td>\n","      <td>5.00</td>\n","      <td>4.00</td>\n","      <td>11.00</td>\n","      <td>3.00</td>\n","      <td>122.00</td>\n","      <td>76.00</td>\n","      <td>59.00</td>\n","      <td>130.00</td>\n","      <td>58.00</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>40.04</td>\n","      <td>36.62</td>\n","      <td>21.63</td>\n","      <td>22.09</td>\n","      <td>NaN</td>\n","      <td>7.00</td>\n","      <td>6.00</td>\n","      <td>4.00</td>\n","      <td>3.00</td>\n","      <td>NaN</td>\n","      <td>104.00</td>\n","      <td>94.00</td>\n","      <td>83.00</td>\n","      <td>77.00</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>40.24</td>\n","      <td>32.49</td>\n","      <td>29.94</td>\n","      <td>30.86</td>\n","      <td>NaN</td>\n","      <td>5.00</td>\n","      <td>5.00</td>\n","      <td>3.00</td>\n","      <td>3.00</td>\n","      <td>NaN</td>\n","      <td>117.00</td>\n","      <td>97.00</td>\n","      <td>90.00</td>\n","      <td>179.00</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>54.78</td>\n","      <td>45.32</td>\n","      <td>53.70</td>\n","      <td>40.72</td>\n","      <td>NaN</td>\n","      <td>12.00</td>\n","      <td>12.00</td>\n","      <td>4.00</td>\n","      <td>3.00</td>\n","      <td>NaN</td>\n","      <td>139.00</td>\n","      <td>108.00</td>\n","      <td>199.00</td>\n","      <td>297.00</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>50.71</td>\n","      <td>53.38</td>\n","      <td>43.64</td>\n","      <td>42.16</td>\n","      <td>NaN</td>\n","      <td>19.00</td>\n","      <td>14.00</td>\n","      <td>14.00</td>\n","      <td>13.00</td>\n","      <td>NaN</td>\n","      <td>117.00</td>\n","      <td>165.00</td>\n","      <td>114.00</td>\n","      <td>142.00</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a17effc5-ff80-4ee9-8cb6-ba522e23d941')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a17effc5-ff80-4ee9-8cb6-ba522e23d941 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a17effc5-ff80-4ee9-8cb6-ba522e23d941');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e2b280e7-9d5c-4c1b-8f88-189de90e16e9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e2b280e7-9d5c-4c1b-8f88-189de90e16e9')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e2b280e7-9d5c-4c1b-8f88-189de90e16e9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","metadata":{"id":"snvByB4gYQ7v","colab":{"base_uri":"https://localhost:8080/","height":488},"executionInfo":{"status":"ok","timestamp":1694442952300,"user_tz":-540,"elapsed":415,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"f5764ddc-132d-4e7c-981a-c699839e7ae8"},"source":["# [3-49] df_dust에서 '측정소명'이 '강남구'인 데이터의\n","# 월별(index), 년별(columns), 미세먼지 농도 평균을 조회하여 temp로 저장합니다\n","place = df_dust.loc[df_dust['측정소명']=='강남구',:] #df[df_dust['측정소명]=='강남구']\n","place.pivot_table(index=['월'],columns=['년'], values=['미세먼지(㎍/㎥)'],aggfunc='mean')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   미세먼지(㎍/㎥)                        \n","년       2016  2017  2018  2019  2020\n","월                                   \n","1      52.68 57.61 42.55   NaN 39.00\n","2      48.48 52.36 50.04   NaN 38.48\n","3      65.65 64.82 37.10   NaN 40.77\n","4      78.03 58.10 44.38   NaN 38.40\n","5      56.50 62.16 33.00   NaN 30.81\n","6      46.50 43.57 42.29   NaN 33.93\n","7      35.87 34.19 21.59   NaN 19.90\n","8      37.58 22.61 18.74 29.24 22.83\n","9      42.63 32.73 16.17 21.72   NaN\n","10     40.90 26.77 23.94 32.65   NaN\n","11     58.23 41.10 47.27 45.03   NaN\n","12     51.06 42.81 39.71 42.68   NaN"],"text/html":["\n","  <div id=\"df-655c133c-4028-4223-aaec-26b6568ea2e3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th colspan=\"5\" halign=\"left\">미세먼지(㎍/㎥)</th>\n","    </tr>\n","    <tr>\n","      <th>년</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","    </tr>\n","    <tr>\n","      <th>월</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>52.68</td>\n","      <td>57.61</td>\n","      <td>42.55</td>\n","      <td>NaN</td>\n","      <td>39.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>48.48</td>\n","      <td>52.36</td>\n","      <td>50.04</td>\n","      <td>NaN</td>\n","      <td>38.48</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>65.65</td>\n","      <td>64.82</td>\n","      <td>37.10</td>\n","      <td>NaN</td>\n","      <td>40.77</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>78.03</td>\n","      <td>58.10</td>\n","      <td>44.38</td>\n","      <td>NaN</td>\n","      <td>38.40</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>56.50</td>\n","      <td>62.16</td>\n","      <td>33.00</td>\n","      <td>NaN</td>\n","      <td>30.81</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>46.50</td>\n","      <td>43.57</td>\n","      <td>42.29</td>\n","      <td>NaN</td>\n","      <td>33.93</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>35.87</td>\n","      <td>34.19</td>\n","      <td>21.59</td>\n","      <td>NaN</td>\n","      <td>19.90</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>37.58</td>\n","      <td>22.61</td>\n","      <td>18.74</td>\n","      <td>29.24</td>\n","      <td>22.83</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>42.63</td>\n","      <td>32.73</td>\n","      <td>16.17</td>\n","      <td>21.72</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>40.90</td>\n","      <td>26.77</td>\n","      <td>23.94</td>\n","      <td>32.65</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>58.23</td>\n","      <td>41.10</td>\n","      <td>47.27</td>\n","      <td>45.03</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>51.06</td>\n","      <td>42.81</td>\n","      <td>39.71</td>\n","      <td>42.68</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-655c133c-4028-4223-aaec-26b6568ea2e3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-655c133c-4028-4223-aaec-26b6568ea2e3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-655c133c-4028-4223-aaec-26b6568ea2e3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c4e6f52a-1af6-45fa-a13a-c63895f37954\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c4e6f52a-1af6-45fa-a13a-c63895f37954')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c4e6f52a-1af6-45fa-a13a-c63895f37954 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":95}]},{"cell_type":"code","source":["place.pivot_table(index=['월','년'], values=['미세먼지(㎍/㎥)'],aggfunc='mean')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"HtKck5xlq9YV","executionInfo":{"status":"ok","timestamp":1694442988239,"user_tz":-540,"elapsed":284,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"74cca395-70ac-45cd-a78a-da970958875e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         미세먼지(㎍/㎥)\n","월  년              \n","1  2016      52.68\n","   2017      57.61\n","   2018      42.55\n","   2020      39.00\n","2  2016      48.48\n","   2017      52.36\n","   2018      50.04\n","   2020      38.48\n","3  2016      65.65\n","   2017      64.82\n","   2018      37.10\n","   2020      40.77\n","4  2016      78.03\n","   2017      58.10\n","   2018      44.38\n","   2020      38.40\n","5  2016      56.50\n","   2017      62.16\n","   2018      33.00\n","   2020      30.81\n","6  2016      46.50\n","   2017      43.57\n","   2018      42.29\n","   2020      33.93\n","7  2016      35.87\n","   2017      34.19\n","   2018      21.59\n","   2020      19.90\n","8  2016      37.58\n","   2017      22.61\n","   2018      18.74\n","   2019      29.24\n","   2020      22.83\n","9  2016      42.63\n","   2017      32.73\n","   2018      16.17\n","   2019      21.72\n","10 2016      40.90\n","   2017      26.77\n","   2018      23.94\n","   2019      32.65\n","11 2016      58.23\n","   2017      41.10\n","   2018      47.27\n","   2019      45.03\n","12 2016      51.06\n","   2017      42.81\n","   2018      39.71\n","   2019      42.68"],"text/html":["\n","  <div id=\"df-e720af55-f107-43f6-a585-860f506ef498\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>미세먼지(㎍/㎥)</th>\n","    </tr>\n","    <tr>\n","      <th>월</th>\n","      <th>년</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">1</th>\n","      <th>2016</th>\n","      <td>52.68</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>57.61</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>42.55</td>\n","    </tr>\n","    <tr>\n","      <th>2020</th>\n","      <td>39.00</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">2</th>\n","      <th>2016</th>\n","      <td>48.48</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>52.36</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>50.04</td>\n","    </tr>\n","    <tr>\n","      <th>2020</th>\n","      <td>38.48</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">3</th>\n","      <th>2016</th>\n","      <td>65.65</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>64.82</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>37.10</td>\n","    </tr>\n","    <tr>\n","      <th>2020</th>\n","      <td>40.77</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">4</th>\n","      <th>2016</th>\n","      <td>78.03</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>58.10</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>44.38</td>\n","    </tr>\n","    <tr>\n","      <th>2020</th>\n","      <td>38.40</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">5</th>\n","      <th>2016</th>\n","      <td>56.50</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>62.16</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>33.00</td>\n","    </tr>\n","    <tr>\n","      <th>2020</th>\n","      <td>30.81</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">6</th>\n","      <th>2016</th>\n","      <td>46.50</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>43.57</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>42.29</td>\n","    </tr>\n","    <tr>\n","      <th>2020</th>\n","      <td>33.93</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">7</th>\n","      <th>2016</th>\n","      <td>35.87</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>34.19</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>21.59</td>\n","    </tr>\n","    <tr>\n","      <th>2020</th>\n","      <td>19.90</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">8</th>\n","      <th>2016</th>\n","      <td>37.58</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>22.61</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>18.74</td>\n","    </tr>\n","    <tr>\n","      <th>2019</th>\n","      <td>29.24</td>\n","    </tr>\n","    <tr>\n","      <th>2020</th>\n","      <td>22.83</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">9</th>\n","      <th>2016</th>\n","      <td>42.63</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>32.73</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>16.17</td>\n","    </tr>\n","    <tr>\n","      <th>2019</th>\n","      <td>21.72</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">10</th>\n","      <th>2016</th>\n","      <td>40.90</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>26.77</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>23.94</td>\n","    </tr>\n","    <tr>\n","      <th>2019</th>\n","      <td>32.65</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">11</th>\n","      <th>2016</th>\n","      <td>58.23</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>41.10</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>47.27</td>\n","    </tr>\n","    <tr>\n","      <th>2019</th>\n","      <td>45.03</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">12</th>\n","      <th>2016</th>\n","      <td>51.06</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>42.81</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>39.71</td>\n","    </tr>\n","    <tr>\n","      <th>2019</th>\n","      <td>42.68</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e720af55-f107-43f6-a585-860f506ef498')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e720af55-f107-43f6-a585-860f506ef498 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e720af55-f107-43f6-a585-860f506ef498');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-97809532-5820-4ed7-b112-401eaded3937\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-97809532-5820-4ed7-b112-401eaded3937')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-97809532-5820-4ed7-b112-401eaded3937 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":96}]},{"cell_type":"markdown","metadata":{"id":"WiwZl-yzg_6V"},"source":["- Series.argmax() : 가장 값이 큰 것의 integer index 구하기\n","- Series.argmin() : 가장 값이 작은 것의 integer index 구하기\n","- Series[Series.argmax()] : 가장 큰 값 구하기\n","- Series[Series.argmin()] : 가장 작은 값 구하기"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BNNzrQIchJXb","executionInfo":{"status":"ok","timestamp":1694443077923,"user_tz":-540,"elapsed":456,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"31e5c66d-67e5-416c-c114-cef605cd1aaf"},"source":["# argmin, argmax를 연습하기 위한 Series\n","s = pd.Series([1, 0, 5, 7, 9, 2, 6, 8],\n","              index=list('ABCDEFGH'))\n","s"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["A    1\n","B    0\n","C    5\n","D    7\n","E    9\n","F    2\n","G    6\n","H    8\n","dtype: int64"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["# index label\n","display(s['A'],s[['A','D']],s[s>5],s['C':'F'])"],"metadata":{"id":"i64lxdDRsM59"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"blXgXXO1hcLZ","executionInfo":{"status":"ok","timestamp":1694443102474,"user_tz":-540,"elapsed":253,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"7e947fd5-3bfb-4112-9e78-8142cbb7112a"},"source":["# argmin(), argmax() 구하기\n","a = s.argmin()\n","b = s.argmax()\n","print(a, s[a])\n","print(b, s[b])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 0\n","4 9\n"]}]},{"cell_type":"code","source":["# integer index\n","display(s[0],s[[0,3]],s[2:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":156},"id":"wrRJ_dB5rybu","executionInfo":{"status":"ok","timestamp":1694443360096,"user_tz":-540,"elapsed":6,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"d834e204-2a12-4801-9e94-64d2ee17d338"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["1"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["A    1\n","D    7\n","dtype: int64"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["C    5\n","D    7\n","E    9\n","dtype: int64"]},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"1VZS1LRy7swL","colab":{"base_uri":"https://localhost:8080/","height":457},"executionInfo":{"status":"ok","timestamp":1694443842316,"user_tz":-540,"elapsed":301,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"024592be-c2d7-4d9e-cbe8-5590a60f5da9"},"source":["# [3-50] 2016년 ~ 2020년도 미세먼지 농도가 가장 높은 월의 위치\n","temp =df_dust.pivot_table(index=['월'],columns=['년'], values='미세먼지(㎍/㎥)',aggfunc='mean')\n","temp"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["년   2016  2017  2018  2019  2020\n","월                               \n","1  52.75 55.73 53.88   NaN 43.18\n","2  48.29 49.55 56.07   NaN 41.95\n","3  66.85 64.54 43.90   NaN 46.35\n","4  73.48 59.58 51.98   NaN 45.61\n","5  58.61 66.01 40.38   NaN 36.47\n","6  47.78 43.89 50.02   NaN 38.04\n","7  35.42 36.67 26.13   NaN 22.13\n","8  37.11 24.57 23.98 27.68 22.32\n","9  40.04 36.62 21.63 22.09   NaN\n","10 40.24 32.49 29.94 30.86   NaN\n","11 54.78 45.32 53.70 40.72   NaN\n","12 50.71 53.38 43.64 42.16   NaN"],"text/html":["\n","  <div id=\"df-9232eb60-0ce2-4819-92c5-726198179521\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>년</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","    </tr>\n","    <tr>\n","      <th>월</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>52.75</td>\n","      <td>55.73</td>\n","      <td>53.88</td>\n","      <td>NaN</td>\n","      <td>43.18</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>48.29</td>\n","      <td>49.55</td>\n","      <td>56.07</td>\n","      <td>NaN</td>\n","      <td>41.95</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>66.85</td>\n","      <td>64.54</td>\n","      <td>43.90</td>\n","      <td>NaN</td>\n","      <td>46.35</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>73.48</td>\n","      <td>59.58</td>\n","      <td>51.98</td>\n","      <td>NaN</td>\n","      <td>45.61</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>58.61</td>\n","      <td>66.01</td>\n","      <td>40.38</td>\n","      <td>NaN</td>\n","      <td>36.47</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>47.78</td>\n","      <td>43.89</td>\n","      <td>50.02</td>\n","      <td>NaN</td>\n","      <td>38.04</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>35.42</td>\n","      <td>36.67</td>\n","      <td>26.13</td>\n","      <td>NaN</td>\n","      <td>22.13</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>37.11</td>\n","      <td>24.57</td>\n","      <td>23.98</td>\n","      <td>27.68</td>\n","      <td>22.32</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>40.04</td>\n","      <td>36.62</td>\n","      <td>21.63</td>\n","      <td>22.09</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>40.24</td>\n","      <td>32.49</td>\n","      <td>29.94</td>\n","      <td>30.86</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>54.78</td>\n","      <td>45.32</td>\n","      <td>53.70</td>\n","      <td>40.72</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>50.71</td>\n","      <td>53.38</td>\n","      <td>43.64</td>\n","      <td>42.16</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9232eb60-0ce2-4819-92c5-726198179521')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9232eb60-0ce2-4819-92c5-726198179521 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9232eb60-0ce2-4819-92c5-726198179521');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-15e172d8-0e8f-476f-a7ad-53b7e4b2a973\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-15e172d8-0e8f-476f-a7ad-53b7e4b2a973')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-15e172d8-0e8f-476f-a7ad-53b7e4b2a973 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":["temp.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fTXswM_xtAKL","executionInfo":{"status":"ok","timestamp":1694443846122,"user_tz":-540,"elapsed":280,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"67a75fef-15ed-4cfa-ee08-c599412dcf79"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Int64Index([2016, 2017, 2018, 2019, 2020], dtype='int64', name='년')"]},"metadata":{},"execution_count":114}]},{"cell_type":"code","source":["for year in [2016,2017,2018,2019,2020]:\n","  idx=temp[year].argmax()\n","  print(f'미세먼지 가장 높은 월 : {temp.index[idx]}월')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zx76mcQgtJzH","executionInfo":{"status":"ok","timestamp":1694443958313,"user_tz":-540,"elapsed":4,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"1b6e6f3b-3353-49a7-9b3d-6b21c7892b1b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["미세먼지 가장 높은 월 : 4월\n","미세먼지 가장 높은 월 : 5월\n","미세먼지 가장 높은 월 : 2월\n","미세먼지 가장 높은 월 : 12월\n","미세먼지 가장 높은 월 : 3월\n"]}]},{"cell_type":"code","metadata":{"id":"EAlPFiLYmi8J"},"source":["# 2019년 데이터 중 1~7월이 없기 때문에 12월이 나옴"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"TSpKmXxFg7pr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694443981318,"user_tz":-540,"elapsed":296,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"6a835c0e-c277-4321-9c01-a71be3b68ae5"},"source":["# [3-51] 2016년 ~ 2020년도 미세먼지 농도가 가장 낮은 월의 위치\n","for year in [2016,2017,2018,2019,2020]:\n","  idx=temp[year].argmin()\n","  print(f'미세먼지 가장 낮은 월 : {temp.index[idx]}월')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["미세먼지 가장 낮은 월 : 7월\n","미세먼지 가장 낮은 월 : 8월\n","미세먼지 가장 낮은 월 : 9월\n","미세먼지 가장 낮은 월 : 9월\n","미세먼지 가장 낮은 월 : 7월\n"]}]},{"cell_type":"code","metadata":{"id":"meHv7GxumuUk"},"source":["# 2020년 데이터 중 9-12월이 없기 때문에 7월이 나옴"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jqH8Kj68m7tZ","colab":{"base_uri":"https://localhost:8080/","height":457},"executionInfo":{"status":"ok","timestamp":1694444163190,"user_tz":-540,"elapsed":13,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"729a9281-5b39-4cba-ebaa-a17dc3eaff97"},"source":["# [3-52] 2016년 ~ 2019년 월별 미세먼지 평균을 구해 temp (DataFrame)로 저장합니다.\n","temp =df_dust.loc[df_dust['년']<=2019,:].groupby('월')[['미세먼지(㎍/㎥)']].mean()\n","temp"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    미세먼지(㎍/㎥)\n","월            \n","1       54.12\n","2       51.22\n","3       60.38\n","4       62.76\n","5       56.76\n","6       46.27\n","7       32.88\n","8       28.41\n","9       29.75\n","10      32.94\n","11      47.64\n","12      47.02"],"text/html":["\n","  <div id=\"df-0304650d-299a-4873-8d11-8302f9fc410f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>미세먼지(㎍/㎥)</th>\n","    </tr>\n","    <tr>\n","      <th>월</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>54.12</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>51.22</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>60.38</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>62.76</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>56.76</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>46.27</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>32.88</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>28.41</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>29.75</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>32.94</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>47.64</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>47.02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0304650d-299a-4873-8d11-8302f9fc410f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0304650d-299a-4873-8d11-8302f9fc410f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0304650d-299a-4873-8d11-8302f9fc410f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ff865fd2-0f96-40ce-8038-1ede51eea3ed\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff865fd2-0f96-40ce-8038-1ede51eea3ed')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ff865fd2-0f96-40ce-8038-1ede51eea3ed button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","metadata":{"id":"O8xs9AYie69b","colab":{"base_uri":"https://localhost:8080/","height":457},"executionInfo":{"status":"ok","timestamp":1694444201141,"user_tz":-540,"elapsed":275,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"9c3be466-e53a-4026-e000-ed6cc8b592a8"},"source":["# [3-53] 2020년 월별 미세먼지 평균을 구해 temp에 '미세먼지 2020' 컬럼으로 추가합니다.\n","temp['미세먼지 2020'] =df_dust.loc[df_dust['년']==2020,:].groupby('월')[['미세먼지(㎍/㎥)']].mean()\n","temp"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    미세먼지(㎍/㎥)  미세먼지 2020\n","월                       \n","1       54.12      43.18\n","2       51.22      41.95\n","3       60.38      46.35\n","4       62.76      45.61\n","5       56.76      36.47\n","6       46.27      38.04\n","7       32.88      22.13\n","8       28.41      22.32\n","9       29.75        NaN\n","10      32.94        NaN\n","11      47.64        NaN\n","12      47.02        NaN"],"text/html":["\n","  <div id=\"df-5971705a-5792-4aab-81cd-b6e0fce28985\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>미세먼지 2020</th>\n","    </tr>\n","    <tr>\n","      <th>월</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>54.12</td>\n","      <td>43.18</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>51.22</td>\n","      <td>41.95</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>60.38</td>\n","      <td>46.35</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>62.76</td>\n","      <td>45.61</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>56.76</td>\n","      <td>36.47</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>46.27</td>\n","      <td>38.04</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>32.88</td>\n","      <td>22.13</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>28.41</td>\n","      <td>22.32</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>29.75</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>32.94</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>47.64</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>47.02</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5971705a-5792-4aab-81cd-b6e0fce28985')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5971705a-5792-4aab-81cd-b6e0fce28985 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5971705a-5792-4aab-81cd-b6e0fce28985');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-83d29122-925a-434e-a10a-029e72627e7e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-83d29122-925a-434e-a10a-029e72627e7e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-83d29122-925a-434e-a10a-029e72627e7e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["# [3-54] temp에 '차이'라는 이름의 컬럼을 추가합니다.\n","# '차이' = '미세먼지(㎍/㎥)' - '미세먼지 2020'\n","temp['차이']= temp['미세먼지(㎍/㎥)'] -temp['미세먼지 2020']\n","temp"],"metadata":{"id":"xqd2QvRMy9BH","colab":{"base_uri":"https://localhost:8080/","height":457},"executionInfo":{"status":"ok","timestamp":1694444242532,"user_tz":-540,"elapsed":8,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"5a39fc6e-bec4-4c84-935e-a5d148ee5ecb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    미세먼지(㎍/㎥)  미세먼지 2020    차이\n","월                             \n","1       54.12      43.18 10.94\n","2       51.22      41.95  9.27\n","3       60.38      46.35 14.03\n","4       62.76      45.61 17.15\n","5       56.76      36.47 20.29\n","6       46.27      38.04  8.23\n","7       32.88      22.13 10.75\n","8       28.41      22.32  6.09\n","9       29.75        NaN   NaN\n","10      32.94        NaN   NaN\n","11      47.64        NaN   NaN\n","12      47.02        NaN   NaN"],"text/html":["\n","  <div id=\"df-0fb1cef6-386f-41f1-b5d6-b817adf7cd90\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>미세먼지 2020</th>\n","      <th>차이</th>\n","    </tr>\n","    <tr>\n","      <th>월</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>54.12</td>\n","      <td>43.18</td>\n","      <td>10.94</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>51.22</td>\n","      <td>41.95</td>\n","      <td>9.27</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>60.38</td>\n","      <td>46.35</td>\n","      <td>14.03</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>62.76</td>\n","      <td>45.61</td>\n","      <td>17.15</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>56.76</td>\n","      <td>36.47</td>\n","      <td>20.29</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>46.27</td>\n","      <td>38.04</td>\n","      <td>8.23</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>32.88</td>\n","      <td>22.13</td>\n","      <td>10.75</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>28.41</td>\n","      <td>22.32</td>\n","      <td>6.09</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>29.75</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>32.94</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>47.64</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>47.02</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0fb1cef6-386f-41f1-b5d6-b817adf7cd90')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0fb1cef6-386f-41f1-b5d6-b817adf7cd90 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0fb1cef6-386f-41f1-b5d6-b817adf7cd90');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0f62979a-3f55-4a5f-b87f-9779f9c81867\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f62979a-3f55-4a5f-b87f-9779f9c81867')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0f62979a-3f55-4a5f-b87f-9779f9c81867 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":121}]},{"cell_type":"markdown","metadata":{"id":"wHnF8QoFn9CR"},"source":["### 3-7. 그래프로 확인하기"]},{"cell_type":"code","source":["## 그래프만 하시는 분들은\n","# 1. 파일다운로드\n","# 2. Colab에서 한글 폰트 사용하기 실행 후 진행하세요"],"metadata":{"id":"PRnSFZaQziuG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 데이터 작성 - 그래프만 작성해볼때 사용하시면 됩니다.\n","import glob\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import koreanize_matplotlib\n","import seaborn as sns\n","\n","# 데이터 값 실수. 소수점 둘째자리까지 표시\n","pd.options.display.float_format = '{:.2f}'.format\n","\n","dfList = []\n","for x in sorted(glob.glob('data_01/data_day_*.xlsx')):\n","    temp = pd.read_excel(x)\n","    dfList.append(temp)\n","\n","df = pd.concat(dfList, axis=0, ignore_index=True)\n","#df.shape\n","df.insert(1, '측정일시2', pd.to_datetime(df['측정일시'], format='%Y%m%d'))\n","df['년'] = df['측정일시2'].dt.year\n","df['월'] = df['측정일시2'].dt.month\n","df['일'] = df['측정일시2'].dt.day\n","df2 = df.drop(columns=['측정일시2'])\n","df1 = df.set_index('측정일시').sort_index()\n","df_dust = df1[['측정소명', '년', '월', '일','오존농도(ppm)', '미세먼지(㎍/㎥)', '초미세먼지(㎍/㎥)']]\n","df_dust = df_dust.reset_index()\n","fine_dust = df_dust.groupby('측정일시')['미세먼지(㎍/㎥)'].transform('mean')\n","s = df_dust['미세먼지(㎍/㎥)']\n","df_dust['미세먼지(㎍/㎥)'] = s.mask(s.isna(), fine_dust)\n","x = df_dust.groupby('측정일시')[['오존농도(ppm)', '초미세먼지(㎍/㎥)']].transform('mean')\n","y = df_dust[['오존농도(ppm)', '초미세먼지(㎍/㎥)']]\n","df_dust[['오존농도(ppm)', '초미세먼지(㎍/㎥)']] = y.mask(y.isna(), x)"],"metadata":{"id":"Hj_Q2T4jzj_N"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mzBLYn5bn8SF","colab":{"base_uri":"https://localhost:8080/","height":457},"executionInfo":{"status":"ok","timestamp":1697962241033,"user_tz":-540,"elapsed":28,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"2f704c51-e9a0-4f0a-ae34-1f06befbb842"},"source":["# [3-55] 월별(index), 년별(columns), 미세먼지 농도 평균을 조회하여 data로 저장합니다\n","data=df_dust.pivot_table(index='월',columns='년',values='미세먼지(㎍/㎥)',aggfunc='mean',fill_value=0)\n","data"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["년   2016  2017  2018  2019  2020\n","월                               \n","1  52.75 55.73 53.88  0.00 43.18\n","2  48.29 49.55 56.07  0.00 41.95\n","3  66.85 64.54 43.90  0.00 46.35\n","4  73.48 59.58 51.98  0.00 45.61\n","5  58.61 66.01 40.38  0.00 36.47\n","6  47.78 43.89 50.02  0.00 38.04\n","7  35.42 36.67 26.13  0.00 22.13\n","8  37.11 24.57 23.98 27.68 22.32\n","9  40.04 36.62 21.63 22.09  0.00\n","10 40.24 32.49 29.94 30.86  0.00\n","11 54.78 45.32 53.70 40.72  0.00\n","12 50.71 53.38 43.64 42.16  0.00"],"text/html":["\n","  <div id=\"df-5f1c6e3a-4539-4c5b-b347-c227b7339987\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>년</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","    </tr>\n","    <tr>\n","      <th>월</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>52.75</td>\n","      <td>55.73</td>\n","      <td>53.88</td>\n","      <td>0.00</td>\n","      <td>43.18</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>48.29</td>\n","      <td>49.55</td>\n","      <td>56.07</td>\n","      <td>0.00</td>\n","      <td>41.95</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>66.85</td>\n","      <td>64.54</td>\n","      <td>43.90</td>\n","      <td>0.00</td>\n","      <td>46.35</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>73.48</td>\n","      <td>59.58</td>\n","      <td>51.98</td>\n","      <td>0.00</td>\n","      <td>45.61</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>58.61</td>\n","      <td>66.01</td>\n","      <td>40.38</td>\n","      <td>0.00</td>\n","      <td>36.47</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>47.78</td>\n","      <td>43.89</td>\n","      <td>50.02</td>\n","      <td>0.00</td>\n","      <td>38.04</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>35.42</td>\n","      <td>36.67</td>\n","      <td>26.13</td>\n","      <td>0.00</td>\n","      <td>22.13</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>37.11</td>\n","      <td>24.57</td>\n","      <td>23.98</td>\n","      <td>27.68</td>\n","      <td>22.32</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>40.04</td>\n","      <td>36.62</td>\n","      <td>21.63</td>\n","      <td>22.09</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>40.24</td>\n","      <td>32.49</td>\n","      <td>29.94</td>\n","      <td>30.86</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>54.78</td>\n","      <td>45.32</td>\n","      <td>53.70</td>\n","      <td>40.72</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>50.71</td>\n","      <td>53.38</td>\n","      <td>43.64</td>\n","      <td>42.16</td>\n","      <td>0.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f1c6e3a-4539-4c5b-b347-c227b7339987')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5f1c6e3a-4539-4c5b-b347-c227b7339987 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5f1c6e3a-4539-4c5b-b347-c227b7339987');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-75066e4f-fe0d-44ce-8946-396116d9b1b7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-75066e4f-fe0d-44ce-8946-396116d9b1b7')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-75066e4f-fe0d-44ce-8946-396116d9b1b7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":417},"id":"_p6NRbzD59Jp","executionInfo":{"status":"ok","timestamp":1697962424389,"user_tz":-540,"elapsed":1453,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"9e302bb5-7c00-44d8-ad69-71fb7ae8f6c0"},"source":["# [3-56] 2016년도 미세먼지 농도가 가장 높은 월은?\n","year = 2016\n","data[year].plot.bar(figsize=(8,4),rot=0,fontsize=12,ylabel='미세먼지(㎍/㎥)',grid=True)\n","plt.title(f'{year}년도 월별 미세먼지 농도',fontsize=15)\n","plt.xticks(fontsize=12)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":498},"id":"8OWFoUx9p9lK","executionInfo":{"status":"ok","timestamp":1697962562787,"user_tz":-540,"elapsed":1373,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"ac7ce7d5-54d2-4fd5-ac75-8cfc710e8a86"},"source":["# [3-57] 2016 ~ 2018 년도별 월별 미세먼지 농도 추이 그래프\n","data.loc[:,2016:2018].plot.bar(figsize=(10,5),rot=0,fontsize=13)\n","plt.title('2016~2018년도 월별 미세먼지 농도 추이',fontsize=17)\n","plt.ylabel('단위(㎍/㎥)',fontsize=14)\n","plt.xlabel('월',fontsize=14)\n","plt.legend(loc='upper right',fontsize=13)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df_dust.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"v5uQntD0i4z7","executionInfo":{"status":"ok","timestamp":1697964078735,"user_tz":-540,"elapsed":446,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"a4b9a1e0-696c-4817-d499-b16a83b25542"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       측정일시 측정소명     년  월  일  오존농도(ppm)  미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)\n","0  20160101  강남구  2016  1  1       0.01      73.00       44.00\n","1  20160101  성북구  2016  1  1       0.01      71.00       45.00\n","2  20160101  송파구  2016  1  1       0.00      64.00       39.00\n","3  20160101  신촌로  2016  1  1       0.00      87.00       40.00\n","4  20160101  양천구  2016  1  1       0.01      82.00       65.00"],"text/html":["\n","  <div id=\"df-da566e6f-68e1-460b-bd54-baa5bfa99cce\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>년</th>\n","      <th>월</th>\n","      <th>일</th>\n","      <th>오존농도(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20160101</td>\n","      <td>강남구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>73.00</td>\n","      <td>44.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20160101</td>\n","      <td>성북구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>71.00</td>\n","      <td>45.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20160101</td>\n","      <td>송파구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>64.00</td>\n","      <td>39.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20160101</td>\n","      <td>신촌로</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>87.00</td>\n","      <td>40.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20160101</td>\n","      <td>양천구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>82.00</td>\n","      <td>65.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da566e6f-68e1-460b-bd54-baa5bfa99cce')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-da566e6f-68e1-460b-bd54-baa5bfa99cce button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-da566e6f-68e1-460b-bd54-baa5bfa99cce');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7b4d6cd1-ecf8-40a2-821d-b4034320e342\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7b4d6cd1-ecf8-40a2-821d-b4034320e342')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7b4d6cd1-ecf8-40a2-821d-b4034320e342 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# [3-58] 2016~2018년까지의 월별 미세먼지 평균 구하기\n","data2=df_dust.loc[df_dust['년']<=2018,:].groupby('월')['미세먼지(㎍/㎥)'].mean()\n","print(data2,data2.argmin(),data2.argmax(),sep='\\n')"],"metadata":{"id":"dN29Vyoqz41O","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697964164052,"user_tz":-540,"elapsed":416,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"b9576225-e26f-4871-c225-c08bbe213d33"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["월\n","1    54.12\n","2    51.22\n","3    60.38\n","4    62.76\n","5    56.76\n","6    46.27\n","7    32.88\n","8    28.55\n","9    32.76\n","10   34.23\n","11   51.38\n","12   48.93\n","Name: 미세먼지(㎍/㎥), dtype: float64\n","7\n","3\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":495},"id":"fyfUIWI8-VB8","executionInfo":{"status":"ok","timestamp":1697965140429,"user_tz":-540,"elapsed":861,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"8f20b103-1dda-4de9-8161-90ad903b1d0e"},"source":["# [3-59] 3년 평균 미세먼지 농도가 가장 높은 월과 낮은 월 강조 그래프\n","colors=['red' if x==3 else 'green' if x==7 else 'gray' for x in range(12)]\n","data2.plot.bar(color=colors,figsize=(10,5))\n","plt.title('2016 ~ 2018년도 월별 미세먼지 농도 평균', fontsize=16)\n","plt.xticks(fontsize=12,rotation=0)\n","plt.grid(True)\n","plt.show()\n","\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAzoAAAHeCAYAAABT+34JAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABTBklEQVR4nO3dd3hU1d728TuThBR6x9C7KGJoARsKGkC69C4gTUTxQYRwKAnPEYx4gGMDDkeKqIACoggCIkWQFgxFEKQISgnNAAmakEwy+/3DJ3kJmZSZSTJh5/u5rrk0u6z9WyszYe7Ze6/xMAzDEAAAAACYiMXdBQAAAABATiPoAAAAADAdgg4AAAAA0yHoAAAAADAdgg4AAAAA0yHoAAAAADAdgg4AAAAA0yHoAAAAADAdgg4AIN/57bffdPnyZXeX4bQTJ07owoULLrdz/fp12Ww2SVJiYqIiIyOVkJDgcru5JSEhQZGRkbp9+7a7S7knnDt3jrECchFBBwDysfPnz2vnzp0O71enTh09//zzuVCR4xISErR06VIFBwerRo0aKlGihB544AH169dP27dvt7tPcHCwXnzxRbvrHn/8cYWEhGR4vCeffFKvv/56uuWFChVSaGioU31wVNu2be3WcLeffvpJv//+u91158+fV+nSpbV69WpJ0sGDB9WkSRPt3bs3R2q8ePGiLBaLFi9enCPtSdLevXvVpEkTff/99w7vO2PGDNWpUyfHaskrJ0+e1C+//JKtx61bt1L3O3funKpWraqlS5dm2PbZs2ez3faJEycUHR2dF10G7hle7i4AAJCxuXPnKjw8XIZhOLRfYmJipp/8jx8/Xu+9955DnyYXLVpUsbGxDtURHx+vli1b6tChQ+rdu7f69OmjEiVKKCoqSps2bVLLli01YsQIzZ8/P81+hmFk2OfffvtNtWrVyvCYv//+uypXrpxuudVqdfhsyPHjx7VixQr99ddfdtd7eXkpMDBQvXv3TrM8s/rv1K1bNz388MNatWpVunXJyclp/pvSnr1258+frw0bNtjtn4eHh8qVK6c33ngjzbhYrVYZhpHhmEyePDnD54fFYlG1atU0bNgweXt7py7PrMasXL16VWfOnHF4v4wkJyerZcuW2rNnj5KSkrK9X8eOHbV27dpsbXv+/HnVrVs3222/9dZbGj9+vCSlnqlL+a89jRs31o0bN7LdvsVi0cqVK9W1a9ds7wOYGUEHyAfOnj2rpUuXatOmTfr111918+ZNBQQEqE2bNpoyZYoqVqyY4b6HDh3SjBkztHPnTt28eVNVqlRRjx49FBISoiJFimR63GvXrql3797avn27zp8/r4CAgCxrPXnypBYsWKDNmzfr/Pnz+vPPP1WuXDk1b97c7pu1vHL06FEtXbpU27Zt05kzZ/TXX3+patWq6ty5syZOnKiSJUtmuO/27dv19ttva//+/frrr79Uo0YNDRw4UK+++mqaN3H2nDlzRl27dtUvv/ySZWi4deuWPvzwQy1fvlynT59WcnKyKleurA4dOujll1+2+3vO6g3j9u3bdfr06XTL//zzz0z3W7NmjRo2bKiFCxfKw8Mj021TFCpUKFvb3WnBggX68ccftWPHDj366KNp1o0ePVqLFy/WkCFD1LNnT7Vq1crh9jOSlJSU5Rhkx2uvvabvvvtOjRs3lqenZ7r1p06d0rVr1/TMM8+oTJkyDrefkJCQ5XMsKzabTa+88ooqVqyoJ598Mt366OhoLV26VA888IAmTJiQ7Xb37t2b4XP6+PHjun79upo3b65GjRo5XXtuunz5snbu3KlXXnklw7OD9pQoUSLb21auXFm//vqrbDabPvnkE02bNk179uxJfS5ERkaqd+/e+uijj/Too4/qvvvuc6gP169fz/a2f/31l0qWLKk9e/YQdID/Q9AB8oGWLVvKMAz16NFDQ4YMUcmSJRUREaF3331XX3zxhXbv3m33E+xNmzapS5cuqlu3rsLCwlS+fHlFRkbq3//+t9auXasffvhBxYoVs3vMgwcPqkuXLrp69apsNpsSExOzrDM8PFxTp05V9erV1bt3b91///3y9/fXxYsXdeTIEZfHwVlJSUkKDAxUnTp11LVrV9WuXVt+fn7avn27Zs+erTVr1qR583GnxYsXa+jQoXr88cc1c+ZMFStWTDt27NCkSZO0adMmbdy4UV5e9v9Ubt68Wb1791ZcXFyWZwrOnTunVq1aKSoqSoMHD9aYMWPk6empXbt26d13300Nj40bN3ao7wsWLLD76XNcXFym+1mtVlWpUkX16tVz6HiOOn78uCpVqpQu5KTo1auXhgwZoiNHjjgUdBITE3Xz5k2762w2mz777DN99tlnzpScxvXr19WsWbMMLx+cP3++XnzxRcXE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u9fqTinrHP3C0HvF2LFjU88sjB49WmXLlpWHh0eGj1KlSmnlypWZttm4cWMZhpGtx19//SXDMPTTTz85VHelSpV04MABeXp62q1zwoQJ8vf3z9Z9SzabTc8//7x27dqlJUuWpLkvq2fPnhoyZIj+8Y9/aP369Q7VeCfDMOxekuio0aNHq0ePHmrXrp127dqVLuxbLBb95z//0bRp0/Tmm28qKirKpeOlMAxDGzZs0PDhw9WkSRMFBATI19dX/v7+CggIUFBQkF566SXt2LEjR46XG06cOKH69etr3LhxqlmzpmbPnq2tW7dqz549+s9//qMGDRpo1qxZqlGjhr766qsM2/nzzz+1cOFCnT9/Pg+rB8yFMzpAPjF+/HjNnTtX8+fPV9++fbPcvl27dpo0aZL27dtn976DlStXysPDI9M319kVHBysxYsX69q1a+m+fFSSfvjhB0ly6NP1nGaz2TRgwABt2LBBX3zxhZ566qks92nXrp0WL16sCxcu2L18ZOXKlSpatKhatGjhUm0ps0j99ttvGV4qkzJTUtGiRTNsJzg4WL6+vtma2rdhw4Yunx3LSZMnT9bw4cOztW1ycrJatmyptWvXqkePHrlcWeYWLVqkF154IcPg4OXlpfr166deCpmZgwcPatWqVZo3b56ee+65dOvnzZsnHx8fl4L12bNnVbNmTf3nP//JcrxLlCihPn36pN4rd6fbt29r3rx5GjlyZKZtTJ48WS+//HK6mdKccfHiRXXr1k379u1T7dq19fjjj6tPnz4qUaJE6qxlR44c0dq1azV37ly1a9dOy5cvd2gii9xms9nUpUsXSdKxY8d03333pVnfuHFjderUSf/85z/Vp08f9ezZUwcPHrT7O/jtt980dOhQffzxxy5/RQBQYBkA3C4sLMyQZMycOTPb+1y9etUoWrSo8cgjjxi3b99Os27//v1GoUKFjF69emXZzuLFiw1JxtmzZzPc5ueffzY8PT2Nvn37GjabLc266Ohoo2bNmkbFihWNuLi4bNefk2w2mzF48GDDYrEYy5cvz/Z+Kf3q3r27kZycnGbdl19+aUgyJkyYkGU7oaGhRmZ/Ti9fvmwUKVLEqFu3rvHbb7+lW3/79m2jXbt2hoeHh7Fv374M22nWrJnx5JNPZllPRrp27WpIypFH3bp1narh9u3bRnx8fKaPW7duGRUq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\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9AD72kM-B8gx","executionInfo":{"status":"ok","timestamp":1697965212925,"user_tz":-540,"elapsed":3,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"47f58f6e-e096-4686-d1af-c72af4de8453"},"source":["# [3-60] 2016~2018 미세먼지 농도 측정치 중 가장 큰 값은?\n","maxValue = df_dust.loc[df_dust['년']<=2018,'미세먼지(㎍/㎥)'].max()\n","maxValue"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["270.0"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"GyqHT_cSBJtd","executionInfo":{"status":"ok","timestamp":1697965450800,"user_tz":-540,"elapsed":317,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"44284f59-9caa-459f-cece-c7ae536e66dc"},"source":["# [3-61] 2016~2018 미세먼지 농도 측정치 중 가장 큰 값을 갖는 정보\n","condition1 = df_dust['년']<=2018\n","condition2 = df_dust['미세먼지(㎍/㎥)'] == maxValue\n","df_dust.loc[condition1 & condition2,:]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          측정일시 측정소명     년  월   일  오존농도(ppm)  미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)\n","4405  20160423  신촌로  2016  4  23       0.01     270.00       46.00"],"text/html":["\n","  <div id=\"df-c37b1ea6-c572-4751-ac23-23788f8bb379\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>년</th>\n","      <th>월</th>\n","      <th>일</th>\n","      <th>오존농도(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4405</th>\n","      <td>20160423</td>\n","      <td>신촌로</td>\n","      <td>2016</td>\n","      <td>4</td>\n","      <td>23</td>\n","      <td>0.01</td>\n","      <td>270.00</td>\n","      <td>46.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c37b1ea6-c572-4751-ac23-23788f8bb379')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c37b1ea6-c572-4751-ac23-23788f8bb379 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c37b1ea6-c572-4751-ac23-23788f8bb379');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["df_dust.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"iuBe_rzwoMyT","executionInfo":{"status":"ok","timestamp":1697965465464,"user_tz":-540,"elapsed":22,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"6f5d8d59-c4bd-4b2a-c7a4-5563a8a5b8f4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       측정일시 측정소명     년  월  일  오존농도(ppm)  미세먼지(㎍/㎥)  초미세먼지(㎍/㎥)\n","0  20160101  강남구  2016  1  1       0.01      73.00       44.00\n","1  20160101  성북구  2016  1  1       0.01      71.00       45.00\n","2  20160101  송파구  2016  1  1       0.00      64.00       39.00\n","3  20160101  신촌로  2016  1  1       0.00      87.00       40.00\n","4  20160101  양천구  2016  1  1       0.01      82.00       65.00"],"text/html":["\n","  <div id=\"df-7679a053-c01e-4cff-aff3-21847fba21a4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>측정일시</th>\n","      <th>측정소명</th>\n","      <th>년</th>\n","      <th>월</th>\n","      <th>일</th>\n","      <th>오존농도(ppm)</th>\n","      <th>미세먼지(㎍/㎥)</th>\n","      <th>초미세먼지(㎍/㎥)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20160101</td>\n","      <td>강남구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>73.00</td>\n","      <td>44.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20160101</td>\n","      <td>성북구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>71.00</td>\n","      <td>45.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20160101</td>\n","      <td>송파구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>64.00</td>\n","      <td>39.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20160101</td>\n","      <td>신촌로</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>87.00</td>\n","      <td>40.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20160101</td>\n","      <td>양천구</td>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>82.00</td>\n","      <td>65.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7679a053-c01e-4cff-aff3-21847fba21a4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7679a053-c01e-4cff-aff3-21847fba21a4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7679a053-c01e-4cff-aff3-21847fba21a4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d35eb9e2-e19e-449b-a099-a6062b428332\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d35eb9e2-e19e-449b-a099-a6062b428332')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d35eb9e2-e19e-449b-a099-a6062b428332 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"lvihzMQjEPlF","executionInfo":{"status":"ok","timestamp":1697965775312,"user_tz":-540,"elapsed":305,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"2246a281-05c7-4281-8d05-66390c3592e2"},"source":["# [3-62] 측정소 중에서 평균 미세먼지 농도가 가장 낮은 곳은 어디일까?\n","data=df_dust.groupby('측정소명')[['미세먼지(㎍/㎥)']].mean()\n","data.head(3)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            미세먼지(㎍/㎥)\n","측정소명                 \n","강남구             41.25\n","강남구청1(SGA)      26.69\n","강남구청2(랩코)       26.19"],"text/html":["\n","  <div id=\"df-3d822ec5-4ce6-4928-97f1-1a9d502ca68d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>미세먼지(㎍/㎥)</th>\n","    </tr>\n","    <tr>\n","      <th>측정소명</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>강남구</th>\n","      <td>41.25</td>\n","    </tr>\n","    <tr>\n","      <th>강남구청1(SGA)</th>\n","      <td>26.69</td>\n","    </tr>\n","    <tr>\n","      <th>강남구청2(랩코)</th>\n","      <td>26.19</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d822ec5-4ce6-4928-97f1-1a9d502ca68d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3d822ec5-4ce6-4928-97f1-1a9d502ca68d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3d822ec5-4ce6-4928-97f1-1a9d502ca68d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-633c5b21-d117-4f0d-9604-2e05e12f9df3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-633c5b21-d117-4f0d-9604-2e05e12f9df3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-633c5b21-d117-4f0d-9604-2e05e12f9df3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d9MYPMnYFnNM","executionInfo":{"status":"ok","timestamp":1697965688473,"user_tz":-540,"elapsed":413,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"c428aca8-6396-4583-d2e2-24df76841c32"},"source":["# [3-63] 측정소 중에서 평균 미세먼지 농도가 가장 높은 곳은 어디일까?\n","data.sort_values(ascending=False).head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["측정소명\n","공사장2(신문로)         96.52\n","공사장3(효제동)         74.14\n","을지인쇄골목1(인쇄골목)     72.62\n","공사장6(세운재정비촉진지구)   69.77\n","공사장5(효제동)         62.16\n","Name: 미세먼지(㎍/㎥), dtype: float64"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"u8TEu69XCpR-","executionInfo":{"status":"ok","timestamp":1697965932931,"user_tz":-540,"elapsed":2760,"user":{"displayName":"이창호","userId":"03038142875928236073"}},"outputId":"ca13b258-14c8-4aeb-f560-ee3255817aae"},"source":["# [3-64] 측정소별 미세먼지 농도 평균을 그래프로 살펴보자\n","plt.figure(figsize=(12,22))\n","# plt.barh(data.index,data['미세먼지(㎍/㎥)'])\n","data['미세먼지(㎍/㎥)'].plot.barh(figsize=(12,22),grid=True)\n","# plt.grid(True)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x2200 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}